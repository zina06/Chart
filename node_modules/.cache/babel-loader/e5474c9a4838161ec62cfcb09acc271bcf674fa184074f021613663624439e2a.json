{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-67c3f5cd\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  ref: \"chartCanvas\",\n  id: \"canvas\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"canvas\", _hoisted_1, null, 512 /* NEED_PATCH */)]);\n}","map":{"version":3,"names":["ref","id","_createElementBlock","_createElementVNode","_hoisted_1"],"sources":["C:\\test\\test\\test\\src\\components\\Chart\\Chart.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <canvas ref=\"chartCanvas\" id=\"canvas\"></canvas>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import 'chartjs-adapter-date-fns';\r\n  import { ref, onMounted } from 'vue';\r\n  import axios from 'axios';\r\n  import { drawChart } from '../../common/common.js'; \r\n  \r\n  \r\n  export default {\r\n  \r\n  name: 'TimeChart',\r\n  setup() {\r\n    const time = ref([]);\r\n    const ping = ref([]);\r\n    const chartCanvas = ref();\r\n   \r\n  \r\n    const getData = async () => {\r\n      try {\r\n        const response = await axios.get(\"/get/chartData\");\r\n        time.value = response.data.map(item => new Date(item.time).getTime());\r\n        ping.value = response.data.map(item => item.ping);\r\n        console.log(response);\r\n        drawChart(chartCanvas.value.getContext('2d'),time.value,ping.value);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n    \r\n    onMounted(getData);\r\n  \r\n    return { chartCanvas };\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  #canvas {\r\n    width: 80%; \r\n    height: 400px;\r\n  }\r\n  </style>\r\n  "],"mappings":";;;EAEcA,GAAG,EAAC,aAAa;EAACC,EAAE,EAAC;;;uBAD/BC,mBAAA,CAEM,cADJC,mBAAA,CAA+C,UAA/CC,UAA+C,8B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}