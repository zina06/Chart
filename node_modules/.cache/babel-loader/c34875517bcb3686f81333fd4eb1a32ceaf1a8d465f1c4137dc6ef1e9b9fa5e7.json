{"ast":null,"code":"import Chart from 'chart.js/auto';\nimport 'chartjs-adapter-date-fns';\nimport { ref, onMounted } from 'vue';\nimport axios from 'axios';\nexport default {\n  name: 'TimeChart',\n  setup() {\n    const time = ref([]);\n    const ping = ref([]);\n    const chartCanvas = ref();\n    const getData = async () => {\n      try {\n        const response = await axios.get(\"/get/chartData\");\n        time.value = response.data.map(item => item.time);\n        ping.value = response.data.map(item => item.ping);\n        //console.log(time.value);\n        drawChart();\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    const drawChart = () => {\n      const ctx = chartCanvas.value.getContext('2d');\n      new Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: time.value,\n          datasets: [{\n            label: 'ping',\n            data: ping.value,\n            borderColor: 'rgb(75, 192, 192)',\n            borderWidth: 1,\n            fill: false,\n            pointRadius: 0\n          }]\n        },\n        options: {\n          scales: {\n            x: {\n              type: 'time',\n              time: {\n                unit: 'day',\n                displayFormats: {\n                  day: 'MM/dd'\n                }\n              }\n            },\n            y: {\n              min: 0,\n              max: 60000\n            }\n          }\n        }\n      });\n    };\n    onMounted(getData);\n    return {\n      chartCanvas\n    };\n  }\n};","map":{"version":3,"names":["Chart","ref","onMounted","axios","name","setup","time","ping","chartCanvas","getData","response","get","value","data","map","item","drawChart","error","console","ctx","getContext","type","labels","datasets","label","borderColor","borderWidth","fill","pointRadius","options","scales","x","unit","displayFormats","day","y","min","max"],"sources":["C:\\test\\test\\test\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n  <div>\n    <canvas ref=\"chartCanvas\" style=\"width: 100%; height: 400px;\"></canvas>\n  </div>\n</template>\n\n<script>\nimport Chart from 'chart.js/auto';\nimport 'chartjs-adapter-date-fns';\nimport { ref, onMounted } from 'vue';\nimport axios from 'axios';\n\n\n\nexport default {\n\nname: 'TimeChart',\nsetup() {\n  const time = ref([]);\n  const ping = ref([]);\n  const chartCanvas = ref();\n\n  const getData = async () => {\n    try {\n      const response = await axios.get(\"/get/chartData\");\n      time.value = response.data.map(item => item.time);\n      ping.value = response.data.map(item => item.ping);\n      //console.log(time.value);\n      drawChart();\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const drawChart = () => {\n    const ctx = chartCanvas.value.getContext('2d');\n    new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: time.value,\n        datasets: [{\n          label: 'ping',\n          data: ping.value,\n          borderColor: 'rgb(75, 192, 192)',\n          borderWidth: 1,\n          fill: false,\n          pointRadius : 0\n        }]\n      },\n      options: {    \n        scales: {\n          x: {\n            type: 'time',\n            time: {\n              unit: 'day',\n              displayFormats: {\n                day: 'MM/dd'\n              }\n            }\n          },\n          y: {\n            min: 0,\n            max: 60000\n          }\n        }\n      }\n    });\n  };\n\n  onMounted(getData);\n\n  return { chartCanvas };\n}\n};\n</script>\n\n<style scoped>\n/* Add your chart styles here */\n</style>\n"],"mappings":"AAOA,OAAOA,KAAI,MAAO,eAAe;AACjC,OAAO,0BAA0B;AACjC,SAASC,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC,OAAOC,KAAI,MAAO,OAAO;AAIzB,eAAe;EAEfC,IAAI,EAAE,WAAW;EACjBC,KAAKA,CAAA,EAAG;IACN,MAAMC,IAAG,GAAIL,GAAG,CAAC,EAAE,CAAC;IACpB,MAAMM,IAAG,GAAIN,GAAG,CAAC,EAAE,CAAC;IACpB,MAAMO,WAAU,GAAIP,GAAG,CAAC,CAAC;IAEzB,MAAMQ,OAAM,GAAI,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMP,KAAK,CAACQ,GAAG,CAAC,gBAAgB,CAAC;QAClDL,IAAI,CAACM,KAAI,GAAIF,QAAQ,CAACG,IAAI,CAACC,GAAG,CAACC,IAAG,IAAKA,IAAI,CAACT,IAAI,CAAC;QACjDC,IAAI,CAACK,KAAI,GAAIF,QAAQ,CAACG,IAAI,CAACC,GAAG,CAACC,IAAG,IAAKA,IAAI,CAACR,IAAI,CAAC;QACjD;QACAS,SAAS,CAAC,CAAC;MACb,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAED,MAAMD,SAAQ,GAAIA,CAAA,KAAM;MACtB,MAAMG,GAAE,GAAIX,WAAW,CAACI,KAAK,CAACQ,UAAU,CAAC,IAAI,CAAC;MAC9C,IAAIpB,KAAK,CAACmB,GAAG,EAAE;QACbE,IAAI,EAAE,MAAM;QACZR,IAAI,EAAE;UACJS,MAAM,EAAEhB,IAAI,CAACM,KAAK;UAClBW,QAAQ,EAAE,CAAC;YACTC,KAAK,EAAE,MAAM;YACbX,IAAI,EAAEN,IAAI,CAACK,KAAK;YAChBa,WAAW,EAAE,mBAAmB;YAChCC,WAAW,EAAE,CAAC;YACdC,IAAI,EAAE,KAAK;YACXC,WAAU,EAAI;UAChB,CAAC;QACH,CAAC;QACDC,OAAO,EAAE;UACPC,MAAM,EAAE;YACNC,CAAC,EAAE;cACDV,IAAI,EAAE,MAAM;cACZf,IAAI,EAAE;gBACJ0B,IAAI,EAAE,KAAK;gBACXC,cAAc,EAAE;kBACdC,GAAG,EAAE;gBACP;cACF;YACF,CAAC;YACDC,CAAC,EAAE;cACDC,GAAG,EAAE,CAAC;cACNC,GAAG,EAAE;YACP;UACF;QACF;MACF,CAAC,CAAC;IACJ,CAAC;IAEDnC,SAAS,CAACO,OAAO,CAAC;IAElB,OAAO;MAAED;IAAY,CAAC;EACxB;AACA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}