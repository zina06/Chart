{"ast":null,"code":"import 'chartjs-adapter-date-fns';\nimport { ref } from 'vue';\nimport axios from 'axios';\nimport { drawChart } from '../../common/common.js';\nimport dayjs from 'dayjs';\nexport default {\n  name: 'TimeChart',\n  setup() {\n    const time = ref([]);\n    const ping = ref([]);\n    const chartCanvas = ref();\n    const startDate = ref(new Date());\n    const endDate = ref(new Date());\n    const formattedDate = ref();\n    const selectedDate = ref();\n    const formatStartDate = ref();\n    const formatDate = dateTime => {\n      const date = new Date(dateTime);\n      const year = date.getFullYear();\n      const month = ('0' + (date.getMonth() + 1)).slice(-2);\n      const day = ('0' + date.getDate()).slice(-2);\n      formattedDate.value = `${year}-${month}-${day}`;\n      console.log(formattedDate.value); // 출력: \"2024-05-16\"\n      console.log(typeof formattedDate.value);\n    };\n    formatDate();\n    const handleStartDateChange = date => {\n      const clickStartDate = date.target.value;\n      if (clickStartDate == null) {\n        return;\n      }\n      console.log(\"clickStartDate:\" + clickStartDate);\n      var Year = clickStartDate.substring(0, 4);\n      var Month = clickStartDate.substring(5, 7);\n      var Day = clickStartDate.substring(8, 10);\n      // var matchDate = sYear + sMonth + sDate;\n      console.log(\"Year\" + Year + Month + Day);\n      const newDate = new Date(Number(Year), Number(Month) - 1, Number(Day));\n\n      // const formattedDate = new Date(newDate.getFullYear(), newDate.getMonth(), newDate.getDate());\n      const year = newDate.getFullYear(); // 2023\n      const month = (newDate.getMonth() + 1).toString().padStart(2, '0'); // 06\n      const day = newDate.getDate().toString().padStart(2, '0'); // 18\n\n      const dateString = year + '-' + month + '-' + day; // 2023-06-18\n      const dateStringtoDate = new Date(dateString);\n      console.log(dayjs(newDate, 'YYYY/MM/DD'));\n\n      //console.log(\"formattedDate\"+formattedDate); // 새로운 Date 객체 출력\n\n      startDate.value = newDate;\n      endDate.value = newDate;\n    };\n    const handleEndDateChange = date => {\n      const clickEndDate = date.target.value.match(/(\\d{4})년 (\\d{1,2})월 (\\d{1,2})일/);\n      console.log(\"매치:\" + clickEndDate);\n      const year = parseInt(clickEndDate[1]);\n      const month = parseInt(clickEndDate[2]) - 1; // JavaScript에서 월은 0부터 시작하므로 1을 뺍니다.\n      const day = parseInt(clickEndDate[3]);\n      const formattedDate = new Date(year, month, day);\n      startDate.value = formattedDate;\n      console.log(\"오늘날짜 클릭: \" + clickEndDate);\n    };\n    const getData = async () => {\n      console.log(\"getData\");\n      console.log(\"startDate value\" + startDate.value);\n      try {\n        const response = await axios.get(`/get/chartData?startDate=${startDate.value}&endDate=${endDate.value}`);\n        time.value = response.data.map(item => new Date(item.time).getTime());\n        ping.value = response.data.map(item => item.ping);\n        console.log(response);\n        drawChart(chartCanvas.value.getContext('2d'), time.value, ping.value);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    //onMounted(getData);\n\n    return {\n      chartCanvas,\n      startDate,\n      endDate,\n      handleStartDateChange,\n      handleEndDateChange,\n      formatDate,\n      selectedDate,\n      formatStartDate,\n      getData\n    };\n  }\n};","map":{"version":3,"names":["ref","axios","drawChart","dayjs","name","setup","time","ping","chartCanvas","startDate","Date","endDate","formattedDate","selectedDate","formatStartDate","formatDate","dateTime","date","year","getFullYear","month","getMonth","slice","day","getDate","value","console","log","handleStartDateChange","clickStartDate","target","Year","substring","Month","Day","newDate","Number","toString","padStart","dateString","dateStringtoDate","handleEndDateChange","clickEndDate","match","parseInt","getData","response","get","data","map","item","getTime","getContext","error"],"sources":["C:\\test\\test\\test\\src\\components\\Chart\\Chart.vue"],"sourcesContent":["<template>\r\n\r\n     <div style=\"display: flex; justify-content: center;\">\r\n    <div style=\"margin: 10px;\"><Datepicker \r\n        v-model=\"startDate\"\r\n        @focus=\"handleStartDateChange\"\r\n        />       \r\n    </div>\r\n    <span style=\"margin: 10px;\">~</span>\r\n    <div  style=\"margin: 10px;\"><Datepicker      \r\n        v-model=\"endDate\"     \r\n        @focus=\"handleStartDateChange\"   \r\n         />\r\n    </div>\r\n    <div>\r\n  </div>\r\n    <button @click=\"getData\">조회</button>\r\n  </div>\r\n\r\n\r\n\r\n    <div>\r\n      <canvas ref=\"chartCanvas\" id=\"canvas\"></canvas>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import 'chartjs-adapter-date-fns';\r\n  import { ref,  } from 'vue';\r\n  import axios from 'axios';\r\n  import { drawChart } from '../../common/common.js'; \r\n  import dayjs from 'dayjs';\r\n \r\n\r\n  \r\n  export default {\r\n  \r\n  name: 'TimeChart',\r\n  setup() {\r\n    const time = ref([]);\r\n    const ping = ref([]);\r\n    const chartCanvas = ref();\r\n    const startDate = ref(new Date());\r\n    const endDate = ref(new Date());\r\n    const formattedDate = ref();\r\n    const selectedDate = ref();\r\n    const formatStartDate = ref();\r\n\r\n\r\n\r\n    const formatDate = (dateTime) => {\r\n      const date = new Date(dateTime);\r\n      const year = date.getFullYear();\r\n      const month = ('0' + (date.getMonth() + 1)).slice(-2);\r\n      const day = ('0' + date.getDate()).slice(-2);\r\n      formattedDate.value = `${year}-${month}-${day}`;\r\n\r\n      console.log(formattedDate.value); // 출력: \"2024-05-16\"\r\n      console.log(typeof formattedDate.value );\r\n  }\r\n\r\n\r\n  formatDate();\r\n\r\n\r\n\r\n    const handleStartDateChange = (date) => {\r\n\r\n     const clickStartDate = date.target.value;\r\n\r\n     if(clickStartDate==null){\r\n        return;\r\n      }\r\n\r\n     console.log(\"clickStartDate:\"+clickStartDate)\r\n\r\n      var Year = clickStartDate.substring(0,4);\r\n      var Month = clickStartDate.substring(5,7);\r\n      var Day = clickStartDate.substring(8,10);\r\n     // var matchDate = sYear + sMonth + sDate;\r\n     console.log(\"Year\"+Year+Month+Day);\r\n      const newDate =  new Date(Number(Year), Number(Month)-1, Number(Day));\r\n\r\n\r\n\r\n     // const formattedDate = new Date(newDate.getFullYear(), newDate.getMonth(), newDate.getDate());\r\n      const year = newDate.getFullYear(); // 2023\r\n      const month = (newDate.getMonth() + 1).toString().padStart(2, '0'); // 06\r\n      const day = newDate.getDate().toString().padStart(2, '0'); // 18\r\n\r\n      const dateString = year + '-' + month + '-' + day; // 2023-06-18\r\n      const dateStringtoDate = new Date(dateString);\r\n      console.log(dayjs(newDate, 'YYYY/MM/DD'));\r\n\r\n      //console.log(\"formattedDate\"+formattedDate); // 새로운 Date 객체 출력\r\n      \r\n      startDate.value = newDate;\r\n      endDate.value = newDate;\r\n    };\r\n\r\n    const handleEndDateChange = (date) => {\r\n      const clickEndDate = date.target.value.match(/(\\d{4})년 (\\d{1,2})월 (\\d{1,2})일/);\r\n      console.log(\"매치:\" + clickEndDate);\r\n\r\n\r\n      const year = parseInt(clickEndDate[1]);\r\n      const month = parseInt(clickEndDate[2]) - 1; // JavaScript에서 월은 0부터 시작하므로 1을 뺍니다.\r\n      const day = parseInt(clickEndDate[3]);\r\n     const formattedDate = new Date(year, month, day);\r\n      startDate.value = formattedDate;\r\n      \r\n      console.log(\"오늘날짜 클릭: \" + clickEndDate );\r\n    };\r\n  \r\n    const getData = async () => {\r\n      console.log(\"getData\");\r\n      console.log(\"startDate value\"+startDate.value);\r\n   \r\n      try {\r\n        const response = await axios.get(`/get/chartData?startDate=${startDate.value}&endDate=${endDate.value}`);\r\n\r\n        time.value = response.data.map(item => new Date(item.time).getTime());\r\n        ping.value = response.data.map(item => item.ping);\r\n        console.log(response);\r\n        drawChart(chartCanvas.value.getContext('2d'),time.value,ping.value);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n    \r\n    //onMounted(getData);\r\n\r\n   \r\n  \r\n    return { chartCanvas,startDate ,endDate,handleStartDateChange,handleEndDateChange, formatDate,\r\n      selectedDate, formatStartDate , getData\r\n    };\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  #canvas {\r\n    width: 800px; \r\n    height: 400px;\r\n  }\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}