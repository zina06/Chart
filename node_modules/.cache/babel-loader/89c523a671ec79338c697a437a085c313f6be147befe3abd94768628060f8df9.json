{"ast":null,"code":"import Chart from 'chart.js/auto';\nimport 'chartjs-adapter-date-fns';\nimport { ref, onMounted } from 'vue';\nimport axios from 'axios';\nexport default {\n  name: 'TimeChart',\n  setup() {\n    const time = ref([]);\n    const ping = ref([]);\n\n    // const getData = async () => {\n    //     const res = await axios.get(`/get/chartData`);\n    //     const data = res.data;\n    //     console.log(\"data:\"+data.ping);\n    // };\n\n    const chartCanvas = ref(null);\n    const getData = async () => {\n      await axios.get(\"/get/chartData\").then(result => {\n        result.data.forEach(item => {\n          //console.log(item.time);\n          time.value = item.time;\n          console.log(item.ping);\n          ping.value = item.ping;\n        });\n        const ctx = chartCanvas.value.getContext('2d');\n        new Chart(ctx, {\n          type: 'line',\n          data: {\n            labels: time.value,\n            datasets: [{\n              label: 'Data',\n              data: ping.value,\n              borderColor: 'rgb(75, 192, 192)',\n              borderWidth: 1,\n              fill: false\n            }]\n          },\n          options: {\n            scales: {\n              x: {\n                type: 'time',\n                time: {\n                  unit: 'day'\n                }\n              }\n            }\n          }\n        });\n      });\n    };\n    getData();\n\n    // onMounted(() => {\n\n    //   const ctx = chartCanvas.value.getContext('2d');\n\n    //   new Chart(ctx, {\n    //     type: 'line',\n    //     data: {\n    //       labels: time.value,\n    //       datasets: [{\n    //         label: 'Data',\n    //         data: ping.value,\n    //         borderColor: 'rgb(75, 192, 192)',\n    //         borderWidth: 1,\n    //         fill: false\n    //       }]\n    //     },\n    //     options: {\n    //       scales: {\n    //         x: {\n    //           type: 'time',\n    //           time: {\n    //             unit: 'day'\n    //           }\n    //         }\n    //       }\n    //     }\n    //   });\n    // });\n\n    return {\n      chartCanvas,\n      getData\n    };\n  }\n};","map":{"version":3,"names":["Chart","ref","onMounted","axios","name","setup","time","ping","chartCanvas","getData","get","then","result","data","forEach","item","value","console","log","ctx","getContext","type","labels","datasets","label","borderColor","borderWidth","fill","options","scales","x","unit"],"sources":["C:\\test\\test\\test\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n  <div>\n    <canvas ref=\"chartCanvas\"></canvas>\n  </div>\n</template>\n\n<script>\nimport Chart from 'chart.js/auto';\nimport 'chartjs-adapter-date-fns';\nimport { ref, onMounted } from 'vue';\nimport axios from 'axios';\n\nexport default {\n\n  name: 'TimeChart',\n  setup() {\n    const time= ref([]);\n    const ping = ref([]);\n\n    // const getData = async () => {\n    //     const res = await axios.get(`/get/chartData`);\n    //     const data = res.data;\n    //     console.log(\"data:\"+data.ping);\n    // };\n\n\n    \n    const chartCanvas = ref(null);\n\n\n    \n    const getData = async () => {\n          await axios\n          .get(\"/get/chartData\")\n          .then((result) => {\n            result.data.forEach((item) => {\n                  //console.log(item.time);\n                  time.value = item.time;\n                  console.log(item.ping);\n                  ping.value = item.ping;\n              });\n\n                \n              const ctx = chartCanvas.value.getContext('2d');\n\n              new Chart(ctx, {\n                type: 'line',\n                data: {\n                  labels: time.value,\n                  datasets: [{\n                    label: 'Data',\n                    data: ping.value,\n                    borderColor: 'rgb(75, 192, 192)',\n                    borderWidth: 1,\n                    fill: false\n                  }]\n                },\n                options: {\n                  scales: {\n                    x: {\n                      type: 'time',\n                      time: {\n                        unit: 'day'\n                      }\n                    }\n                  }\n                }\n              });\n\n\n\n          });\n      };\n\n      \n      getData();\n\n\n    // onMounted(() => {\n\n    //   const ctx = chartCanvas.value.getContext('2d');\n\n    //   new Chart(ctx, {\n    //     type: 'line',\n    //     data: {\n    //       labels: time.value,\n    //       datasets: [{\n    //         label: 'Data',\n    //         data: ping.value,\n    //         borderColor: 'rgb(75, 192, 192)',\n    //         borderWidth: 1,\n    //         fill: false\n    //       }]\n    //     },\n    //     options: {\n    //       scales: {\n    //         x: {\n    //           type: 'time',\n    //           time: {\n    //             unit: 'day'\n    //           }\n    //         }\n    //       }\n    //     }\n    //   });\n    // });\n\n    return { chartCanvas, getData };\n  }\n};\n</script>\n\n<style scoped>\n/* Add your chart styles here */\n</style>\n"],"mappings":"AAOA,OAAOA,KAAI,MAAO,eAAe;AACjC,OAAO,0BAA0B;AACjC,SAASC,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EAEbC,IAAI,EAAE,WAAW;EACjBC,KAAKA,CAAA,EAAG;IACN,MAAMC,IAAI,GAAEL,GAAG,CAAC,EAAE,CAAC;IACnB,MAAMM,IAAG,GAAIN,GAAG,CAAC,EAAE,CAAC;;IAEpB;IACA;IACA;IACA;IACA;;IAIA,MAAMO,WAAU,GAAIP,GAAG,CAAC,IAAI,CAAC;IAI7B,MAAMQ,OAAM,GAAI,MAAAA,CAAA,KAAY;MACtB,MAAMN,KAAI,CACTO,GAAG,CAAC,gBAAgB,EACpBC,IAAI,CAAEC,MAAM,IAAK;QAChBA,MAAM,CAACC,IAAI,CAACC,OAAO,CAAEC,IAAI,IAAK;UACxB;UACAT,IAAI,CAACU,KAAI,GAAID,IAAI,CAACT,IAAI;UACtBW,OAAO,CAACC,GAAG,CAACH,IAAI,CAACR,IAAI,CAAC;UACtBA,IAAI,CAACS,KAAI,GAAID,IAAI,CAACR,IAAI;QAC1B,CAAC,CAAC;QAGF,MAAMY,GAAE,GAAIX,WAAW,CAACQ,KAAK,CAACI,UAAU,CAAC,IAAI,CAAC;QAE9C,IAAIpB,KAAK,CAACmB,GAAG,EAAE;UACbE,IAAI,EAAE,MAAM;UACZR,IAAI,EAAE;YACJS,MAAM,EAAEhB,IAAI,CAACU,KAAK;YAClBO,QAAQ,EAAE,CAAC;cACTC,KAAK,EAAE,MAAM;cACbX,IAAI,EAAEN,IAAI,CAACS,KAAK;cAChBS,WAAW,EAAE,mBAAmB;cAChCC,WAAW,EAAE,CAAC;cACdC,IAAI,EAAE;YACR,CAAC;UACH,CAAC;UACDC,OAAO,EAAE;YACPC,MAAM,EAAE;cACNC,CAAC,EAAE;gBACDT,IAAI,EAAE,MAAM;gBACZf,IAAI,EAAE;kBACJyB,IAAI,EAAE;gBACR;cACF;YACF;UACF;QACF,CAAC,CAAC;MAIN,CAAC,CAAC;IACN,CAAC;IAGDtB,OAAO,CAAC,CAAC;;IAGX;;IAEA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,OAAO;MAAED,WAAW;MAAEC;IAAQ,CAAC;EACjC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}