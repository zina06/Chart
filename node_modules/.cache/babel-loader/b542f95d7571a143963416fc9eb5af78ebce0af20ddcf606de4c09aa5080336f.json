{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport 'chartjs-adapter-date-fns';\nimport { ref, onMounted, nextTick } from 'vue';\nimport axios from 'axios';\nimport { drawChart } from '../../common/common.js';\nimport moment from 'moment';\nexport default {\n  name: 'TimeChart',\n  setup() {\n    const date = new Date();\n    const startDate = ref(new Date(date.getFullYear(), date.getMonth(), 1));\n    const endDate = ref(new Date());\n    const isLoading = ref(false);\n    const chartCanvasRefs = ref([]);\n    const charts = ref([]);\n    let currentPage = 1;\n    const pageSize = 3;\n    //const tableName = ref();\n\n    // 날짜 클릭 시 호출\n    const handleDateChange = (event, dateRef) => {\n      const dateString = event.target.value;\n      if (!dateString) return;\n      const [year, month, day] = dateString.split('-').map(Number);\n      dateRef.value = new Date(year, month - 1, day);\n    };\n    const handleStartDateChange = event => handleDateChange(event, startDate);\n    const handleEndDateChange = event => handleDateChange(event, endDate);\n\n    // 데이터 받아오기\n    const getData = async () => {\n      const formattedStartDate = moment(startDate.value).format('YYYY-MM-DD');\n      const formattedEndDate = moment(endDate.value).format('YYYY-MM-DD');\n      if (formattedStartDate > formattedEndDate) {\n        alert(\"시작날짜는 끝날짜보다 작아야 합니다.\");\n        return;\n      }\n      isLoading.value = true;\n      charts.value = [];\n      try {\n        const response = await axios.get('/unionPingData', {\n          params: {\n            startDate: formattedStartDate,\n            endDate: formattedEndDate,\n            page: currentPage,\n            pageSize: pageSize\n          }\n        });\n        const data = response.data;\n        for (const [tableName, tableData] of Object.entries(data)) {\n          charts.value.push({\n            serverName: tableName,\n            time: tableData.map(item => new Date(item.time).getTime()),\n            ping: tableData.map(item => item.ping)\n          });\n        }\n        console.log(response.data);\n        await nextTick();\n        // await drawChartsInGroups(5);\n        drawCharts();\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        isLoading.value = false;\n      }\n    };\n\n    // 그래프 밑으로 나열\n    const drawCharts = async () => {\n      for (let i = 0; i < charts.value.length; i++) {\n        const chart = charts.value[i];\n        const canvas = chartCanvasRefs.value[i];\n        if (canvas) {\n          const context = canvas.getContext('2d');\n          await drawChart(context, chart.time, chart.ping);\n        }\n      }\n    };\n    onMounted(() => {\n      getData();\n    });\n    return {\n      startDate,\n      endDate,\n      handleStartDateChange,\n      handleEndDateChange,\n      getData,\n      isLoading,\n      //   chartCanvasRefs,\n      charts,\n      drawCharts\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","nextTick","axios","drawChart","moment","name","setup","date","Date","startDate","getFullYear","getMonth","endDate","isLoading","chartCanvasRefs","charts","currentPage","pageSize","handleDateChange","event","dateRef","dateString","target","value","year","month","day","split","map","Number","handleStartDateChange","handleEndDateChange","getData","formattedStartDate","format","formattedEndDate","alert","response","get","params","page","data","tableName","tableData","Object","entries","push","serverName","time","item","getTime","ping","console","log","drawCharts","error","i","length","chart","canvas","context","getContext"],"sources":["C:\\test\\test\\test\\src\\components\\Board\\InsertForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"center\">\r\n    <img alt=\"Vue logo\" src=\"@/assets/metanet.png\" style=\"width: 200px;\">\r\n  </div>\r\n     <div style=\"display: flex; justify-content: center;\">\r\n      <div style=\"margin: 10px;\"><Datepicker \r\n          v-model=\"startDate\"\r\n          @focus=\"handleStartDateChange\"\r\n          />       \r\n      </div>\r\n      <span style=\"margin: 10px;\">~</span>\r\n      <div style=\"margin: 10px;\"><Datepicker      \r\n          v-model=\"endDate\"     \r\n          @focus=\"handleEndDateChange\"   \r\n          />\r\n      </div>\r\n     <div>\r\n\r\n      \r\n     \r\n    </div>\r\n       <button @click=\"getData\" class=\"btn btn-info btn-sm success\">조회</button>\r\n    </div>\r\n\r\n  <div class=\"spinner-div\" v-if=\"isLoading\">\r\n      <q-spinner-tail\r\n      color=\"primary\"\r\n      size=\"5em\"\r\n      />\r\n  </div>\r\n\r\n  <br>\r\n  <div v-for=\"(chart, index) in charts\" :key=\"index\" id=\"chartDiv\">\r\n    <label style=\"margin-top: 35px; margin-bottom: 10px;\"><b>서버 이름 {{ chart.tableName }}</b></label>\r\n   \r\n     <canvas :ref=\"el => chartCanvasRefs[index] = el\" :id=\"'canvas' + index\" ></canvas>\r\n \r\n\r\n</div>\r\n  \r\n  </template>\r\n  \r\n  <script>\r\n  import 'chartjs-adapter-date-fns';\r\n  import { ref, onMounted,  nextTick,    } from 'vue';\r\n  import axios from 'axios';\r\n  import { drawChart,  } from '../../common/common.js'; \r\n  import moment from 'moment';\r\n\r\n\r\n  \r\n  export default {\r\n  \r\n  name: 'TimeChart',\r\n  setup() {\r\n    const date = new Date();\r\n    const startDate = ref(new Date(date.getFullYear(), date.getMonth(), 1));\r\n    const endDate = ref(new Date());\r\n    const isLoading = ref(false);\r\n    const chartCanvasRefs = ref([]);\r\n    const charts = ref([]);\r\n    let currentPage = 1;\r\n    const pageSize = 3;\r\n    //const tableName = ref();\r\n  \r\n\r\n    // 날짜 클릭 시 호출\r\n    const handleDateChange = (event, dateRef) => {\r\n      const dateString = event.target.value;\r\n      if (!dateString) return;\r\n\r\n      const [year, month, day] = dateString.split('-').map(Number);\r\n      dateRef.value = new Date(year, month - 1, day);\r\n    };\r\n\r\n    const handleStartDateChange = event => handleDateChange(event, startDate);\r\n    const handleEndDateChange = event => handleDateChange(event, endDate);\r\n\r\n\r\n\r\n    // 데이터 받아오기\r\n    const getData = async () => {\r\n      const formattedStartDate = moment(startDate.value).format('YYYY-MM-DD');\r\n      const formattedEndDate = moment(endDate.value).format('YYYY-MM-DD');\r\n\r\n      if (formattedStartDate > formattedEndDate) {\r\n        alert(\"시작날짜는 끝날짜보다 작아야 합니다.\");\r\n        return;\r\n      }\r\n\r\n      isLoading.value = true;\r\n      charts.value = [];\r\n      try {\r\n        const response = await axios.get('/unionPingData', {\r\n          params: {\r\n            startDate: formattedStartDate,\r\n            endDate: formattedEndDate,\r\n            page: currentPage,\r\n            pageSize: pageSize\r\n          },\r\n        });\r\n\r\n\r\n        const data = response.data;\r\n\r\n        for (const [tableName, tableData] of Object.entries(data)) {\r\n          charts.value.push({\r\n            serverName: tableName,\r\n            time: tableData.map(item => new Date(item.time).getTime()),\r\n            ping: tableData.map(item => item.ping),\r\n          });\r\n        }\r\n        console.log(response.data);\r\n        await nextTick();\r\n       // await drawChartsInGroups(5);\r\n       drawCharts();\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      } finally {\r\n        isLoading.value = false;\r\n      }\r\n    };\r\n\r\n\r\n    // 그래프 밑으로 나열\r\n    const drawCharts = async () => {\r\n      for (let i = 0; i < charts.value.length; i++) {\r\n        const chart = charts.value[i];\r\n        const canvas = chartCanvasRefs.value[i];\r\n        if (canvas) {\r\n          const context = canvas.getContext('2d');\r\n          await drawChart(context, chart.time, chart.ping);\r\n        }\r\n      }\r\n    };\r\n\r\n \r\n\r\n    onMounted(() => {\r\n      getData();\r\n    });\r\n\r\n\r\n\r\n    return {\r\n      startDate,\r\n      endDate,\r\n      handleStartDateChange,\r\n      handleEndDateChange,\r\n      getData,\r\n      isLoading,\r\n   //   chartCanvasRefs,\r\n      charts,\r\n      drawCharts\r\n    };\r\n\r\n\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n   @import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR&display=swap');\r\n\r\n  #canvas {\r\n    width: 800px; \r\n    height: 400px;\r\n  }\r\n\r\n\r\n  .spinner-div {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(255, 255, 255, 0.8); \r\n  z-index: 9999; \r\n}\r\n\r\n\r\nbutton {\r\n  height: 35px; \r\n  margin-top: 5px; \r\n  width: 50px; \r\n  margin-left: 10px; \r\n  color: white;\r\n\r\n}\r\n\r\n\r\n.center {\r\n     text-align: center; /* 가로 가운데 정렬 */\r\n        }\r\n\r\n\r\n#chartDiv{\r\n  height: 400px; \r\n  margin-bottom:100px; \r\n  margin-left: 20px; \r\n  margin-right: 20px;\r\n\r\n} \r\n\r\n  </style>\r\n  "],"mappings":";AA2CE,OAAO,0BAA0B;AACjC,SAASA,GAAG,EAAEC,SAAS,EAAGC,QAAQ,QAAY,KAAK;AACnD,OAAOC,KAAI,MAAO,OAAO;AACzB,SAASC,SAAS,QAAU,wBAAwB;AACpD,OAAOC,MAAK,MAAO,QAAQ;AAI3B,eAAe;EAEfC,IAAI,EAAE,WAAW;EACjBC,KAAKA,CAAA,EAAG;IACN,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAAC,CAAC;IACvB,MAAMC,SAAQ,GAAIV,GAAG,CAAC,IAAIS,IAAI,CAACD,IAAI,CAACG,WAAW,CAAC,CAAC,EAAEH,IAAI,CAACI,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACvE,MAAMC,OAAM,GAAIb,GAAG,CAAC,IAAIS,IAAI,CAAC,CAAC,CAAC;IAC/B,MAAMK,SAAQ,GAAId,GAAG,CAAC,KAAK,CAAC;IAC5B,MAAMe,eAAc,GAAIf,GAAG,CAAC,EAAE,CAAC;IAC/B,MAAMgB,MAAK,GAAIhB,GAAG,CAAC,EAAE,CAAC;IACtB,IAAIiB,WAAU,GAAI,CAAC;IACnB,MAAMC,QAAO,GAAI,CAAC;IAClB;;IAGA;IACA,MAAMC,gBAAe,GAAIA,CAACC,KAAK,EAAEC,OAAO,KAAK;MAC3C,MAAMC,UAAS,GAAIF,KAAK,CAACG,MAAM,CAACC,KAAK;MACrC,IAAI,CAACF,UAAU,EAAE;MAEjB,MAAM,CAACG,IAAI,EAAEC,KAAK,EAAEC,GAAG,IAAIL,UAAU,CAACM,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC;MAC5DT,OAAO,CAACG,KAAI,GAAI,IAAIf,IAAI,CAACgB,IAAI,EAAEC,KAAI,GAAI,CAAC,EAAEC,GAAG,CAAC;IAChD,CAAC;IAED,MAAMI,qBAAoB,GAAIX,KAAI,IAAKD,gBAAgB,CAACC,KAAK,EAAEV,SAAS,CAAC;IACzE,MAAMsB,mBAAkB,GAAIZ,KAAI,IAAKD,gBAAgB,CAACC,KAAK,EAAEP,OAAO,CAAC;;IAIrE;IACA,MAAMoB,OAAM,GAAI,MAAAA,CAAA,KAAY;MAC1B,MAAMC,kBAAiB,GAAI7B,MAAM,CAACK,SAAS,CAACc,KAAK,CAAC,CAACW,MAAM,CAAC,YAAY,CAAC;MACvE,MAAMC,gBAAe,GAAI/B,MAAM,CAACQ,OAAO,CAACW,KAAK,CAAC,CAACW,MAAM,CAAC,YAAY,CAAC;MAEnE,IAAID,kBAAiB,GAAIE,gBAAgB,EAAE;QACzCC,KAAK,CAAC,sBAAsB,CAAC;QAC7B;MACF;MAEAvB,SAAS,CAACU,KAAI,GAAI,IAAI;MACtBR,MAAM,CAACQ,KAAI,GAAI,EAAE;MACjB,IAAI;QACF,MAAMc,QAAO,GAAI,MAAMnC,KAAK,CAACoC,GAAG,CAAC,gBAAgB,EAAE;UACjDC,MAAM,EAAE;YACN9B,SAAS,EAAEwB,kBAAkB;YAC7BrB,OAAO,EAAEuB,gBAAgB;YACzBK,IAAI,EAAExB,WAAW;YACjBC,QAAQ,EAAEA;UACZ;QACF,CAAC,CAAC;QAGF,MAAMwB,IAAG,GAAIJ,QAAQ,CAACI,IAAI;QAE1B,KAAK,MAAM,CAACC,SAAS,EAAEC,SAAS,KAAKC,MAAM,CAACC,OAAO,CAACJ,IAAI,CAAC,EAAE;UACzD1B,MAAM,CAACQ,KAAK,CAACuB,IAAI,CAAC;YAChBC,UAAU,EAAEL,SAAS;YACrBM,IAAI,EAAEL,SAAS,CAACf,GAAG,CAACqB,IAAG,IAAK,IAAIzC,IAAI,CAACyC,IAAI,CAACD,IAAI,CAAC,CAACE,OAAO,CAAC,CAAC,CAAC;YAC1DC,IAAI,EAAER,SAAS,CAACf,GAAG,CAACqB,IAAG,IAAKA,IAAI,CAACE,IAAI;UACvC,CAAC,CAAC;QACJ;QACAC,OAAO,CAACC,GAAG,CAAChB,QAAQ,CAACI,IAAI,CAAC;QAC1B,MAAMxC,QAAQ,CAAC,CAAC;QACjB;QACAqD,UAAU,CAAC,CAAC;MACb,EAAE,OAAOC,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C,UAAU;QACR1C,SAAS,CAACU,KAAI,GAAI,KAAK;MACzB;IACF,CAAC;;IAGD;IACA,MAAM+B,UAAS,GAAI,MAAAA,CAAA,KAAY;MAC7B,KAAK,IAAIE,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAIzC,MAAM,CAACQ,KAAK,CAACkC,MAAM,EAAED,CAAC,EAAE,EAAE;QAC5C,MAAME,KAAI,GAAI3C,MAAM,CAACQ,KAAK,CAACiC,CAAC,CAAC;QAC7B,MAAMG,MAAK,GAAI7C,eAAe,CAACS,KAAK,CAACiC,CAAC,CAAC;QACvC,IAAIG,MAAM,EAAE;UACV,MAAMC,OAAM,GAAID,MAAM,CAACE,UAAU,CAAC,IAAI,CAAC;UACvC,MAAM1D,SAAS,CAACyD,OAAO,EAAEF,KAAK,CAACV,IAAI,EAAEU,KAAK,CAACP,IAAI,CAAC;QAClD;MACF;IACF,CAAC;IAIDnD,SAAS,CAAC,MAAM;MACdgC,OAAO,CAAC,CAAC;IACX,CAAC,CAAC;IAIF,OAAO;MACLvB,SAAS;MACTG,OAAO;MACPkB,qBAAqB;MACrBC,mBAAmB;MACnBC,OAAO;MACPnB,SAAS;MACZ;MACGE,MAAM;MACNuC;IACF,CAAC;EAGD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}