{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-67c3f5cd\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  ref: \"chartCanvas\",\n  id: \"canvas\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Datepicker = _resolveComponent(\"Datepicker\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" <div style=\\\"display: flex; justify-content: center;\\\">\\r\\n    <div style=\\\"margin: 10px;\\\"><Datepicker \\r\\n        v-model=\\\"startDate\\\"\\r\\n        @focus=\\\"handleStartDateChange\\\"\\r\\n        />       \\r\\n    </div>\\r\\n    <span style=\\\"margin: 10px;\\\">~</span>\\r\\n    <div  style=\\\"margin: 10px;\\\" @change=\\\"formatDate\\\"><Datepicker      \\r\\n        v-model=\\\"endDate\\\"        \\r\\n         />\\r\\n    </div>\\r\\n    <button @click=\\\"getData\\\"  >조회</button>\\r\\n  </div> \"), _createVNode(_component_Datepicker, {\n    modelValue: _ctx.example2,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.example2 = $event),\n    \"upper-limit\": _ctx.example2_to,\n    \"lower-limit\": _ctx.example2_from\n  }, null, 8 /* PROPS */, [\"modelValue\", \"upper-limit\", \"lower-limit\"]), _createElementVNode(\"div\", null, [_createElementVNode(\"canvas\", _hoisted_1, null, 512 /* NEED_PATCH */)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["ref","id","_createElementBlock","_Fragment","_createCommentVNode","_createVNode","_component_Datepicker","modelValue","_ctx","example2","_cache","$event","example2_to","example2_from","_createElementVNode","_hoisted_1"],"sources":["C:\\test\\test\\test\\src\\components\\Chart\\Chart.vue"],"sourcesContent":["<template>\r\n\r\n    <!-- <div style=\"display: flex; justify-content: center;\">\r\n    <div style=\"margin: 10px;\"><Datepicker \r\n        v-model=\"startDate\"\r\n        @focus=\"handleStartDateChange\"\r\n        />       \r\n    </div>\r\n    <span style=\"margin: 10px;\">~</span>\r\n    <div  style=\"margin: 10px;\" @change=\"formatDate\"><Datepicker      \r\n        v-model=\"endDate\"        \r\n         />\r\n    </div>\r\n    <button @click=\"getData\"  >조회</button>\r\n  </div> -->\r\n  <Datepicker\r\n    v-model=\"example2\"\r\n    :upper-limit=\"example2_to\"\r\n    :lower-limit=\"example2_from\"\r\n  />\r\n\r\n\r\n    <div>\r\n      <canvas ref=\"chartCanvas\" id=\"canvas\"></canvas>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import 'chartjs-adapter-date-fns';\r\n  import { ref, onMounted } from 'vue';\r\n  import axios from 'axios';\r\n  import { drawChart } from '../../common/common.js'; \r\n\r\n  \r\n  export default {\r\n  \r\n  name: 'TimeChart',\r\n  setup() {\r\n    const time = ref([]);\r\n    const ping = ref([]);\r\n    const chartCanvas = ref();\r\n   // const picked = ref(new Date());\r\n   // const picked2 = ref(new Date());\r\n    const startDate = ref(new Date());\r\n    const endDate = ref(new Date());\r\n   // const locale = reactive(ko);\r\n    const formattedDate = ref();\r\n\r\n    const example2 = ref(new Date())\r\nconst example2_from = ref(new Date())\r\nconst example2_to = ref(new Date())\r\n\r\n\r\n\r\n\r\n   const formatDate = (dateTime) => {\r\n    const date = new Date(dateTime);\r\n    const year = date.getFullYear();\r\n    const month = ('0' + (date.getMonth() + 1)).slice(-2);\r\n    const day = ('0' + date.getDate()).slice(-2);\r\n     formattedDate.value = `${year}-${month}-${day}`;\r\n\r\n    console.log(formattedDate.value); // 출력: \"2024-05-16\"\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleStartDateChange = (date) => {\r\n     // startDate.value = date;\r\n     // console.log(\"오늘날짜 클릭: \" + startDate.value);\r\n     const selectedDate = date.target.ariaLabel;\r\n     console.log(\"Selected Date: \" + selectedDate);\r\n    };\r\n\r\n    const handleEndDateChange = (date) => {\r\n      endDate.value = date;\r\n      console.log(\"오늘날짜 클릭: \" + date );\r\n    };\r\n  \r\n    const getData = async () => {\r\n      console.log(\"getData\");\r\n      console.log(startDate.value);\r\n      try {\r\n        const response = await axios.get(`/get/chartData?startDate=${formattedDate.value}&endDate=${endDate.value}`);\r\n        time.value = response.data.map(item => new Date(item.time).getTime());\r\n        ping.value = response.data.map(item => item.ping);\r\n        console.log(response);\r\n        drawChart(chartCanvas.value.getContext('2d'),time.value,ping.value);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n    \r\n    onMounted(getData);\r\n\r\n   \r\n  \r\n    return { chartCanvas,startDate ,endDate,handleStartDateChange,handleEndDateChange, formatDate};\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  #canvas {\r\n    width: 800px; \r\n    height: 400px;\r\n  }\r\n  </style>\r\n  "],"mappings":";;;EAuBcA,GAAG,EAAC,aAAa;EAACC,EAAE,EAAC;;;;uBAvBnCC,mBAAA,CAAAC,SAAA,SAEIC,mBAAA,0dAYQ,EACVC,YAAA,CAIEC,qBAAA;IAnBJC,UAAA,EAgBaC,IAAA,CAAAC,QAAQ;IAhBrB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAgBaH,IAAA,CAAAC,QAAQ,GAAAE,MAAA;IAChB,aAAW,EAAEH,IAAA,CAAAI,WAAW;IACxB,aAAW,EAAEJ,IAAA,CAAAK;yEAIdC,mBAAA,CAEM,cADJA,mBAAA,CAA+C,UAA/CC,UAA+C,8B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}