{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-469af010\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  ref: \"chartCanvas\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"canvas\", _hoisted_1, null, 512 /* NEED_PATCH */)]);\n}","map":{"version":3,"names":["ref","_createElementBlock","_createElementVNode","_hoisted_1"],"sources":["C:\\test\\test\\test\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n  <div>\n    <canvas ref=\"chartCanvas\"></canvas>\n  </div>\n</template>\n\n<script>\nimport Chart from 'chart.js/auto';\nimport 'chartjs-adapter-date-fns';\nimport { ref, onMounted } from 'vue';\nimport axios from 'axios';\n\nexport default {\n\n  name: 'TimeChart',\n  setup() {\n\n    const getData = async () => {\n        const res = await axios.get(`/get/chartData`);\n        const data = res.data;\n       \n    };\n    console.log(\"data:\"+data);\n    const chartCanvas = ref(null);\n\n    onMounted(() => {\n      const ctx = chartCanvas.value.getContext('2d');\n\n      new Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: ['2024-05-01T00:00:00', '2024-05-01T06:00:00', '2024-05-03T00:00:00', '2024-05-03T15:00:00', '2024-05-03T18:00:00', '2024-05-06T00:00:00', '2024-05-07T00:00:00'],\n          datasets: [{\n            label: 'Data',\n            data: [12, 19, 3, 5, 2, 16, 20],\n            borderColor: 'rgb(75, 192, 192)',\n            borderWidth: 1,\n            fill: false\n          }]\n        },\n        options: {\n          scales: {\n            x: {\n              type: 'time',\n              time: {\n                unit: 'day'\n              }\n            }\n          }\n        }\n      });\n    });\n\n    return { chartCanvas, getData };\n  }\n};\n</script>\n\n<style scoped>\n/* Add your chart styles here */\n</style>\n"],"mappings":";;;EAEYA,GAAG,EAAC;AAAa;;uBAD3BC,mBAAA,CAEM,cADJC,mBAAA,CAAmC,UAAnCC,UAAmC,8B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}