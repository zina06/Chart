{"ast":null,"code":"import 'chartjs-adapter-date-fns';\nimport { ref, onMounted } from 'vue';\nimport axios from 'axios';\nimport { drawChart } from '../../common/common.js';\nimport moment from 'moment';\nexport default {\n  name: 'TimeChart',\n  setup() {\n    const date = new Date();\n    const time = ref([]);\n    const ping = ref([]);\n    const chartCanvas = ref();\n    const startDate = ref(new Date(date2.getFullYear(), date2.getMonth(), 1));\n    const endDate = ref(new Date());\n    const selectedDate = ref();\n    const formatStartDate = ref();\n    const isLoading = ref(true);\n    const handleStartDateChange = date => {\n      const clickStartDate = date.target.value;\n      if (clickStartDate == null) {\n        return;\n      }\n      var Year = clickStartDate.substring(0, 4);\n      var Month = clickStartDate.substring(5, 7);\n      var Day = clickStartDate.substring(8, 10);\n      const newDate = new Date(Number(Year), Number(Month) - 1, Number(Day));\n      startDate.value = newDate;\n    };\n    const handleEndDateChange = date => {\n      const clickEndDate = date.target.value;\n      var Year = clickEndDate.substring(0, 4);\n      var Month = clickEndDate.substring(5, 7);\n      var Day = clickEndDate.substring(8, 10);\n      const newDate = new Date(Number(Year), Number(Month) - 1, Number(Day));\n      endDate.value = newDate;\n    };\n    const getData = async () => {\n      console.log(\"getData\");\n      console.log(\"startDate value\" + startDate.value);\n      console.log(moment(startDate.value).format('YYYY-MM-DD').substring(0, 12));\n      const formattedStartDate = moment(startDate.value).format('YYYY-MM-DD');\n      const formattedEndDate = moment(endDate.value).format('YYYY-MM-DD');\n      if (formattedStartDate <= formattedEndDate) {\n        isLoading.value = true;\n        try {\n          const response = await axios.get(`/get/chartData`, {\n            params: {\n              startDate: formattedStartDate,\n              endDate: formattedEndDate\n            }\n          });\n          time.value = response.data.map(item => new Date(item.time).getTime());\n          ping.value = response.data.map(item => item.ping);\n          console.log(response);\n          drawChart(chartCanvas.value.getContext('2d'), time.value, ping.value);\n          isLoading.value = false;\n        } catch (error) {\n          console.error('Error fetching data:', error);\n        }\n      } else {\n        alert(\"시작날짜는 끝날짜보다 작아야 합니다.\");\n      }\n    };\n    onMounted(getData);\n    return {\n      chartCanvas,\n      startDate,\n      endDate,\n      handleStartDateChange,\n      handleEndDateChange,\n      selectedDate,\n      formatStartDate,\n      getData,\n      isLoading\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","axios","drawChart","moment","name","setup","date","Date","time","ping","chartCanvas","startDate","date2","getFullYear","getMonth","endDate","selectedDate","formatStartDate","isLoading","handleStartDateChange","clickStartDate","target","value","Year","substring","Month","Day","newDate","Number","handleEndDateChange","clickEndDate","getData","console","log","format","formattedStartDate","formattedEndDate","response","get","params","data","map","item","getTime","getContext","error","alert"],"sources":["C:\\test\\test\\test\\src\\components\\Chart\\Chart.vue"],"sourcesContent":["<template>\r\n\r\n     <div style=\"display: flex; justify-content: center; margin-top: 20px;\">\r\n    <div style=\"margin: 10px;\"><Datepicker \r\n        v-model=\"startDate\"\r\n        @focus=\"handleStartDateChange\"\r\n        />       \r\n    </div>\r\n    <span style=\"margin: 10px;\">~</span>\r\n    <div  style=\"margin: 10px;\"><Datepicker      \r\n        v-model=\"endDate\"     \r\n        @focus=\"handleEndDateChange\"   \r\n         />\r\n    </div>\r\n    <div>\r\n  </div>\r\n    <button @click=\"getData\" class=\"btn btn-info btn-sm\" style=\"height: 37px; margin-top: 5px; width: 50px; margin-left: 10px; color: white;\">조회</button>\r\n  </div>\r\n\r\n  <div class=\"spinner-div\" v-if=\"isLoading\">\r\n      <q-spinner-tail\r\n      color=\"primary\"\r\n      size=\"5em\"\r\n      />\r\n  </div>\r\n\r\n    <div>\r\n      <canvas ref=\"chartCanvas\" id=\"canvas\"></canvas>\r\n    </div>\r\n\r\n\r\n\r\n  </template>\r\n  \r\n  <script>\r\n  import 'chartjs-adapter-date-fns';\r\n  import { ref, onMounted } from 'vue';\r\n  import axios from 'axios';\r\n  import { drawChart } from '../../common/common.js'; \r\n  import moment from 'moment';\r\n\r\n\r\n  \r\n  export default {\r\n  \r\n  name: 'TimeChart',\r\n  setup() {\r\n    const date = new Date();\r\n    const time = ref([]);\r\n    const ping = ref([]);\r\n    const chartCanvas = ref();\r\n    const startDate = ref(new Date(date2.getFullYear(), date2.getMonth(), 1));\r\n    const endDate = ref(new Date());\r\n    const selectedDate = ref();\r\n    const formatStartDate = ref();\r\n    const isLoading = ref(true);\r\n\r\n   \r\n\r\n    const handleStartDateChange = (date) => {\r\n\r\n     const clickStartDate = date.target.value;\r\n\r\n     if(clickStartDate==null){\r\n        return;\r\n      }\r\n\r\n\r\n      var Year = clickStartDate.substring(0,4);\r\n      var Month = clickStartDate.substring(5,7);\r\n      var Day = clickStartDate.substring(8,10);\r\n   \r\n   \r\n      const newDate =  new Date(Number(Year), Number(Month)-1, Number(Day));     \r\n      startDate.value = newDate;\r\n    \r\n    };\r\n\r\n    const handleEndDateChange = (date) => {\r\n      const clickEndDate = date.target.value;\r\n\r\n      var Year = clickEndDate.substring(0,4);\r\n      var Month = clickEndDate.substring(5,7);\r\n      var Day = clickEndDate.substring(8,10);\r\n\r\n      const newDate =  new Date(Number(Year), Number(Month)-1, Number(Day));\r\n      endDate.value = newDate;\r\n      \r\n    \r\n    };\r\n  \r\n    const getData = async () => {\r\n      console.log(\"getData\");\r\n      console.log(\"startDate value\"+startDate.value);\r\n   \r\n\r\n      console.log(moment(startDate.value).format('YYYY-MM-DD').substring(0, 12));\r\n\r\n      const formattedStartDate = moment(startDate.value).format('YYYY-MM-DD');\r\n      const formattedEndDate = moment(endDate.value).format('YYYY-MM-DD');\r\n\r\n      if(formattedStartDate <= formattedEndDate) {\r\n        isLoading.value = true;\r\n      try {\r\n        const response = await axios.get(`/get/chartData`, {\r\n              params: {\r\n                startDate: formattedStartDate,\r\n                  endDate: formattedEndDate\r\n                }\r\n              });\r\n\r\n          time.value = response.data.map(item => new Date(item.time).getTime());\r\n          ping.value = response.data.map(item => item.ping);\r\n          console.log(response);\r\n          drawChart(chartCanvas.value.getContext('2d'),time.value,ping.value);\r\n          isLoading.value = false;\r\n        } catch (error) {\r\n          console.error('Error fetching data:', error);\r\n        }\r\n      } else {\r\n        alert(\"시작날짜는 끝날짜보다 작아야 합니다.\")\r\n      }\r\n    };\r\n      onMounted(getData);\r\n\r\n   \r\n  \r\n    return { chartCanvas,startDate ,endDate,handleStartDateChange,handleEndDateChange, \r\n      selectedDate, formatStartDate , getData, isLoading\r\n    };\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  #canvas {\r\n    width: 800px; \r\n    height: 400px;\r\n  }\r\n\r\n\r\n  .spinner-div {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(255, 255, 255, 0.8); /* 배경을 반투명하게 설정하여 로딩 화면임을 나타냅니다 */\r\n  z-index: 9999; /* 다른 요소들보다 위에 나타나도록 설정합니다 */\r\n}\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}