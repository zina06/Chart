{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-67c3f5cd\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  style: {\n    \"display\": \"flex\",\n    \"justify-content\": \"center\"\n  }\n};\nconst _hoisted_2 = {\n  style: {\n    \"margin\": \"10px\"\n  }\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  style: {\n    \"margin\": \"10px\"\n  }\n}, \"~\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  style: {\n    \"margin\": \"10px\"\n  }\n};\nconst _hoisted_5 = {\n  ref: \"chartCanvas\",\n  id: \"canvas\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Datepicker = _resolveComponent(\"Datepicker\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_Datepicker, {\n    modelValue: $setup.startDate,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.startDate = $event),\n    onFocus: $setup.handleStartDateChange\n  }, null, 8 /* PROPS */, [\"modelValue\", \"onFocus\"])]), _hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_Datepicker, {\n    modelValue: $setup.endDate,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.endDate = $event),\n    onFocus: $setup.handleEndDateChange\n  }, null, 8 /* PROPS */, [\"modelValue\", \"onFocus\"])]), _createElementVNode(\"div\", null, [_createVNode(_component_Datepicker, {\n    modelValue: $setup.selectedDate,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.selectedDate = $event),\n    onFocus: $setup.handleEndDateChange\n  }, null, 8 /* PROPS */, [\"modelValue\", \"onFocus\"])]), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $setup.getData && $setup.getData(...args))\n  }, \"조회\")]), _createElementVNode(\"div\", null, [_createElementVNode(\"canvas\", _hoisted_5, null, 512 /* NEED_PATCH */)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["style","_createElementVNode","ref","id","_createElementBlock","_Fragment","_hoisted_1","_hoisted_2","_createVNode","_component_Datepicker","modelValue","$setup","startDate","_cache","$event","onFocus","handleStartDateChange","_hoisted_3","_hoisted_4","endDate","handleEndDateChange","selectedDate","onClick","args","getData","_hoisted_5"],"sources":["C:\\test\\test\\test\\src\\components\\Chart\\Chart.vue"],"sourcesContent":["<template>\r\n\r\n     <div style=\"display: flex; justify-content: center;\">\r\n    <div style=\"margin: 10px;\"><Datepicker \r\n        v-model=\"startDate\"\r\n        @focus=\"handleStartDateChange\"\r\n        />       \r\n    </div>\r\n    <span style=\"margin: 10px;\">~</span>\r\n    <div  style=\"margin: 10px;\"><Datepicker      \r\n        v-model=\"endDate\"     \r\n        @focus=\"handleEndDateChange\"   \r\n         />\r\n    </div>\r\n    <div>\r\n    <Datepicker v-model=\"selectedDate\" @focus=\"handleEndDateChange\" />\r\n  </div>\r\n    <button @click=\"getData\">조회</button>\r\n  </div>\r\n\r\n\r\n\r\n    <div>\r\n      <canvas ref=\"chartCanvas\" id=\"canvas\"></canvas>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import 'chartjs-adapter-date-fns';\r\n  import { ref, onMounted } from 'vue';\r\n  import axios from 'axios';\r\n  import { drawChart } from '../../common/common.js'; \r\n\r\n  \r\n  export default {\r\n  \r\n  name: 'TimeChart',\r\n  setup() {\r\n    const time = ref([]);\r\n    const ping = ref([]);\r\n    const chartCanvas = ref();\r\n    const startDate = ref(new Date());\r\n    const endDate = ref(new Date());\r\n    const formattedDate = ref();\r\n    const selectedDate = ref();\r\n    const formatStartDate = ref();\r\n\r\n\r\n\r\n   const formatDate = (dateTime) => {\r\n    const date = new Date(dateTime);\r\n    const year = date.getFullYear();\r\n    const month = ('0' + (date.getMonth() + 1)).slice(-2);\r\n    const day = ('0' + date.getDate()).slice(-2);\r\n     formattedDate.value = `${year}-${month}-${day}`;\r\n\r\n    console.log(formattedDate.value); // 출력: \"2024-05-16\"\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleStartDateChange = (date) => {\r\n\r\n     const clickStartDate = date.target.value;\r\n     console.log(\"clickStartDate:\"+clickStartDate)\r\n\r\n      var Year = clickStartDate.substring(0,4);\r\n      var Month = clickStartDate.substring(5,7);\r\n      var Day = clickStartDate.substring(8,10);\r\n    // var matchDate = sYear + sMonth + sDate;\r\n    console.log(\"Year\"+Year+Month+Day);\r\n      const newDate =  new Date(Number(Year), Number(Month)-1, Number(Day));\r\n\r\n      const formattedDate = new Date(newDate.getFullYear(), newDate.getMonth(), newDate.getDate());\r\n\r\n      console.log(\"formattedDate\"+formattedDate); // 새로운 Date 객체 출력\r\n      \r\n      startDate.value = clickStartDate;\r\n  \r\n    };\r\n\r\n    const handleEndDateChange = (date) => {\r\n      const clickEndDate = date.target.value.match(/(\\d{4})년 (\\d{1,2})월 (\\d{1,2})일/);\r\n      console.log(\"매치:\" + clickEndDate);\r\n\r\n\r\n      const year = parseInt(clickEndDate[1]);\r\n      const month = parseInt(clickEndDate[2]) - 1; // JavaScript에서 월은 0부터 시작하므로 1을 뺍니다.\r\n      const day = parseInt(clickEndDate[3]);\r\n      const formattedDate = new Date(year, month, day);\r\n      startDate.value = formattedDate;\r\n      \r\n      console.log(\"오늘날짜 클릭: \" + clickEndDate );\r\n    };\r\n  \r\n    const getData = async () => {\r\n      console.log(\"getData\");\r\n      console.log(\"startDate value\"+startDate.value);\r\n   \r\n      try {\r\n        const response = await axios.get(`/get/chartData?startDate=${startDate.value}&endDate=${endDate.value}`);\r\n\r\n        time.value = response.data.map(item => new Date(item.time).getTime());\r\n        ping.value = response.data.map(item => item.ping);\r\n        console.log(response);\r\n        drawChart(chartCanvas.value.getContext('2d'),time.value,ping.value);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n    \r\n    onMounted(getData);\r\n\r\n   \r\n  \r\n    return { chartCanvas,startDate ,endDate,handleStartDateChange,handleEndDateChange, formatDate,\r\n      selectedDate, formatStartDate , getData\r\n    };\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  #canvas {\r\n    width: 800px; \r\n    height: 400px;\r\n  }\r\n  </style>\r\n  "],"mappings":";;;EAEUA,KAA+C,EAA/C;IAAA;IAAA;EAAA;AAA+C;;EAChDA,KAAqB,EAArB;IAAA;EAAA;AAAqB;gEAK1BC,mBAAA,CAAoC;EAA9BD,KAAqB,EAArB;IAAA;EAAA;AAAqB,GAAC,GAAC;;EACvBA,KAAqB,EAArB;IAAA;EAAA;AAAqB;;EAcjBE,GAAG,EAAC,aAAa;EAACC,EAAE,EAAC;;;;uBAvBnCC,mBAAA,CAAAC,SAAA,SAEKJ,mBAAA,CAgBG,OAhBHK,UAgBG,GAfJL,mBAAA,CAIM,OAJNM,UAIM,GAJqBC,YAAA,CAGrBC,qBAAA;IANVC,UAAA,EAIiBC,MAAA,CAAAC,SAAS;IAJ1B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAIiBH,MAAA,CAAAC,SAAS,GAAAE,MAAA;IACjBC,OAAK,EAAEJ,MAAA,CAAAK;wDAGZC,UAAoC,EACpChB,mBAAA,CAIM,OAJNiB,UAIM,GAJsBV,YAAA,CAGrBC,qBAAA;IAZXC,UAAA,EAUiBC,MAAA,CAAAQ,OAAO;IAVxB,uBAAAN,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAUiBH,MAAA,CAAAQ,OAAO,GAAAL,MAAA;IACfC,OAAK,EAAEJ,MAAA,CAAAS;wDAGZnB,mBAAA,CAEI,cADJO,YAAA,CAAkEC,qBAAA;IAftEC,UAAA,EAeyBC,MAAA,CAAAU,YAAY;IAfrC,uBAAAR,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAeyBH,MAAA,CAAAU,YAAY,GAAAP,MAAA;IAAGC,OAAK,EAAEJ,MAAA,CAAAS;wDAE3CnB,mBAAA,CAAoC;IAA3BqB,OAAK,EAAAT,MAAA,QAAAA,MAAA,UAAAU,IAAA,KAAEZ,MAAA,CAAAa,OAAA,IAAAb,MAAA,CAAAa,OAAA,IAAAD,IAAA,CAAO;KAAE,IAAE,E,GAK3BtB,mBAAA,CAEM,cADJA,mBAAA,CAA+C,UAA/CwB,UAA+C,8B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}