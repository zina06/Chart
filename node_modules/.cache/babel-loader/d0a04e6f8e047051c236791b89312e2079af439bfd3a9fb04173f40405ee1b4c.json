{"ast":null,"code":"import 'chartjs-adapter-date-fns';\nimport { ref, onMounted } from 'vue';\nimport axios from 'axios';\nimport { drawChart } from '../../common/common.js';\nexport default {\n  name: 'TimeChart',\n  setup() {\n    const time = ref([]);\n    const ping = ref([]);\n    const chartCanvas = ref();\n    const picked = ref(null);\n    const picked2 = ref(null);\n    const startDate = ref();\n    const endDate = ref();\n    const handleDateChange = date => {\n      console.log(\"오늘날짜 클릭: \" + date.target.ariaLabel);\n    };\n    const getData = async () => {\n      console.log(\"getData\");\n      try {\n        const response = await axios.get(`/get/chartData?startDate=${startDate.value}&endDate=${endDate.value}`);\n        time.value = response.data.map(item => new Date(item.time).getTime());\n        ping.value = response.data.map(item => item.ping);\n        console.log(response);\n        drawChart(chartCanvas.value.getContext('2d'), time.value, ping.value);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    onMounted(getData);\n    return {\n      chartCanvas,\n      picked,\n      picked2,\n      handleDateChange\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","axios","drawChart","name","setup","time","ping","chartCanvas","picked","picked2","startDate","endDate","handleDateChange","date","console","log","target","ariaLabel","getData","response","get","value","data","map","item","Date","getTime","getContext","error"],"sources":["C:\\test\\test\\test\\src\\components\\Chart\\Chart.vue"],"sourcesContent":["<template>\r\n    <!-- <div>\r\n      <input type=\"text\" list=\"list\" id=\"numbers\"/>\r\n      <datalist id =\"list\">\r\n        <option value=\"1\" />\r\n        <option value=\"2\" />\r\n        <option value=\"3\" />\r\n        <option value=\"4\" />\r\n        <option value=\"5\" />\r\n        <option value=\"6\" />\r\n        <option value=\"7\" />\r\n        <option value=\"8\" />\r\n        <option value=\"9\" />\r\n        <option value=\"10\" />\r\n        <option value=\"11\" />\r\n        <option value=\"12\" />\r\n      </datalist>\r\n    </div> -->\r\n\r\n    <div style=\"display: flex; justify-content: center;\">\r\n    <div style=\"margin: 10px;\"><Datepicker \r\n        v-model=\"picked\"\r\n        @change=\"handleDateChange\"\r\n        :locale=\"ko\" />\r\n    </div>\r\n    <span style=\"margin: 10px;\">~</span>\r\n    <div  style=\"margin: 10px;\"><Datepicker      \r\n        v-model=\"picked2\"\r\n        @click=\"handleDateChange\"\r\n        :locale=\"ko\" />\r\n    </div>\r\n    <button @click=\"getData\" >조회</button>\r\n  </div>\r\n\r\n    \r\n\r\n    <div>\r\n      <canvas ref=\"chartCanvas\" id=\"canvas\"></canvas>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import 'chartjs-adapter-date-fns';\r\n  import { ref, onMounted } from 'vue';\r\n  import axios from 'axios';\r\n  import { drawChart } from '../../common/common.js'; \r\n\r\n  \r\n  export default {\r\n  \r\n  name: 'TimeChart',\r\n  setup() {\r\n    const time = ref([]);\r\n    const ping = ref([]);\r\n    const chartCanvas = ref();\r\n    const picked = ref(null);\r\n    const picked2 = ref(null);\r\n    const startDate = ref();\r\n    const endDate = ref();\r\n\r\n\r\n    const handleDateChange = (date) => {\r\n      console.log(\"오늘날짜 클릭: \" + date.target.ariaLabel);\r\n    };\r\n  \r\n    const getData = async () => {\r\n      console.log(\"getData\");\r\n      try {\r\n        const response = await axios.get(`/get/chartData?startDate=${startDate.value}&endDate=${endDate.value}`);\r\n        time.value = response.data.map(item => new Date(item.time).getTime());\r\n        ping.value = response.data.map(item => item.ping);\r\n        console.log(response);\r\n        drawChart(chartCanvas.value.getContext('2d'),time.value,ping.value);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n    \r\n    onMounted(getData);\r\n\r\n   \r\n  \r\n    return { chartCanvas,picked ,picked2,handleDateChange};\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  #canvas {\r\n    width: 800px; \r\n    height: 400px;\r\n  }\r\n  </style>\r\n  "],"mappings":"AA0CE,OAAO,0BAA0B;AACjC,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC,OAAOC,KAAI,MAAO,OAAO;AACzB,SAASC,SAAQ,QAAS,wBAAwB;AAGlD,eAAe;EAEfC,IAAI,EAAE,WAAW;EACjBC,KAAKA,CAAA,EAAG;IACN,MAAMC,IAAG,GAAIN,GAAG,CAAC,EAAE,CAAC;IACpB,MAAMO,IAAG,GAAIP,GAAG,CAAC,EAAE,CAAC;IACpB,MAAMQ,WAAU,GAAIR,GAAG,CAAC,CAAC;IACzB,MAAMS,MAAK,GAAIT,GAAG,CAAC,IAAI,CAAC;IACxB,MAAMU,OAAM,GAAIV,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMW,SAAQ,GAAIX,GAAG,CAAC,CAAC;IACvB,MAAMY,OAAM,GAAIZ,GAAG,CAAC,CAAC;IAGrB,MAAMa,gBAAe,GAAKC,IAAI,IAAK;MACjCC,OAAO,CAACC,GAAG,CAAC,WAAU,GAAIF,IAAI,CAACG,MAAM,CAACC,SAAS,CAAC;IAClD,CAAC;IAED,MAAMC,OAAM,GAAI,MAAAA,CAAA,KAAY;MAC1BJ,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;MACtB,IAAI;QACF,MAAMI,QAAO,GAAI,MAAMlB,KAAK,CAACmB,GAAG,CAAE,4BAA2BV,SAAS,CAACW,KAAM,YAAWV,OAAO,CAACU,KAAM,EAAC,CAAC;QACxGhB,IAAI,CAACgB,KAAI,GAAIF,QAAQ,CAACG,IAAI,CAACC,GAAG,CAACC,IAAG,IAAK,IAAIC,IAAI,CAACD,IAAI,CAACnB,IAAI,CAAC,CAACqB,OAAO,CAAC,CAAC,CAAC;QACrEpB,IAAI,CAACe,KAAI,GAAIF,QAAQ,CAACG,IAAI,CAACC,GAAG,CAACC,IAAG,IAAKA,IAAI,CAAClB,IAAI,CAAC;QACjDQ,OAAO,CAACC,GAAG,CAACI,QAAQ,CAAC;QACrBjB,SAAS,CAACK,WAAW,CAACc,KAAK,CAACM,UAAU,CAAC,IAAI,CAAC,EAACtB,IAAI,CAACgB,KAAK,EAACf,IAAI,CAACe,KAAK,CAAC;MACrE,EAAE,OAAOO,KAAK,EAAE;QACdd,OAAO,CAACc,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAED5B,SAAS,CAACkB,OAAO,CAAC;IAIlB,OAAO;MAAEX,WAAW;MAACC,MAAK;MAAGC,OAAO;MAACG;IAAgB,CAAC;EACtD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}