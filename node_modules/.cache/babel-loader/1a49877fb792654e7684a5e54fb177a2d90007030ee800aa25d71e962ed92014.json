{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-469af010\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  style: {\n    \"height\": \"300px\",\n    \"width\": \"180%\"\n  }\n};\nconst _hoisted_2 = {\n  ref: \"chartCanvas\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"canvas\", _hoisted_2, null, 512 /* NEED_PATCH */)]);\n}","map":{"version":3,"names":["style","ref","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2"],"sources":["C:\\test\\test\\test\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n  <div style=\"height: 300px; width: 180%\">\n    <canvas ref=\"chartCanvas\"></canvas>\n  </div>\n</template>\n\n<script>\nimport Chart from 'chart.js/auto';\nimport 'chartjs-adapter-date-fns';\nimport { ref, onMounted } from 'vue';\nimport axios from 'axios';\n\n\n\nexport default {\n\nname: 'TimeChart',\nsetup() {\n  const time = ref([]);\n  const ping = ref([]);\n  const chartCanvas = ref();\n\n  const getData = async () => {\n    try {\n      const response = await axios.get(\"/get/chartData\");\n      time.value = response.data.map(item => item.time);\n      ping.value = response.data.map(item => item.ping);\n      console.log(time.value);\n      drawChart();\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const drawChart = () => {\n    const ctx = chartCanvas.value.getContext('2d');\n    new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: time.value,\n        datasets: [{\n          label: 'Data',\n          data: ping.value,\n          borderColor: 'rgb(75, 192, 192)',\n          borderWidth: 1,\n          fill: false\n        }]\n      },\n      options: {\n        scales: {\n          x: {\n            type: 'time',\n            time: {\n              unit: 'day',\n              displayFormats: {\n                day: 'MM/dd'\n              }\n            }\n          }\n        }\n      }\n    });\n  };\n\n  onMounted(getData);\n\n  return { chartCanvas };\n}\n};\n</script>\n\n<style scoped>\n/* Add your chart styles here */\n</style>\n"],"mappings":";;;EACOA,KAAkC,EAAlC;IAAA;IAAA;EAAA;AAAkC;;EAC7BC,GAAG,EAAC;AAAa;;uBAD3BC,mBAAA,CAEM,OAFNC,UAEM,GADJC,mBAAA,CAAmC,UAAnCC,UAAmC,8B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}