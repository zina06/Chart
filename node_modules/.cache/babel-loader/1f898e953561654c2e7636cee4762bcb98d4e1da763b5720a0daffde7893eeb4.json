{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-67c3f5cd\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  style: {\n    \"display\": \"flex\",\n    \"justify-content\": \"center\",\n    \"margin-top\": \"20px\"\n  }\n};\nconst _hoisted_2 = {\n  style: {\n    \"margin\": \"10px\"\n  }\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  style: {\n    \"margin\": \"10px\"\n  }\n}, \"~\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  style: {\n    \"margin\": \"10px\"\n  }\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", null, null, -1 /* HOISTED */));\nconst _hoisted_6 = {\n  key: 0,\n  class: \"spinner-div\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_8 = {\n  style: {\n    \"margin-top\": \"35px\",\n    \"margin-bottom\": \"10px\"\n  }\n};\nconst _hoisted_9 = [\"id\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Datepicker = _resolveComponent(\"Datepicker\");\n  const _component_q_spinner_tail = _resolveComponent(\"q-spinner-tail\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_Datepicker, {\n    modelValue: $setup.startDate,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.startDate = $event),\n    onFocus: $setup.handleStartDateChange\n  }, null, 8 /* PROPS */, [\"modelValue\", \"onFocus\"])]), _hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_Datepicker, {\n    modelValue: $setup.endDate,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.endDate = $event),\n    onFocus: $setup.handleEndDateChange\n  }, null, 8 /* PROPS */, [\"modelValue\", \"onFocus\"])]), _hoisted_5, _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $setup.getData && $setup.getData(...args)),\n    class: \"btn btn-info btn-sm\"\n  }, \"조회\")]), $setup.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createVNode(_component_q_spinner_tail, {\n    color: \"primary\",\n    size: \"5em\"\n  })])) : _createCommentVNode(\"v-if\", true), _hoisted_7, _createCommentVNode(\" <div>   \\r\\n    <canvas ref=\\\"chartCanvas\\\" id=\\\"canvas\\\">    \\r\\n    </canvas>\\r\\n  </div> \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.charts, (chart, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      style: {\n        \"height\": \"400px\",\n        \"margin-bottom\": \"100px\"\n      }\n    }, [_createElementVNode(\"label\", _hoisted_8, \"서버 이름 : \" + _toDisplayString(), 1 /* TEXT */), _createElementVNode(\"canvas\", {\n      ref_for: true,\n      ref: el => $setup.chartCanvasRefs[index] = el,\n      id: 'canvas' + index\n    }, null, 8 /* PROPS */, _hoisted_9)]);\n  }), 128 /* KEYED_FRAGMENT */))], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["style","_createElementVNode","key","class","_createElementBlock","_Fragment","_hoisted_1","_hoisted_2","_createVNode","_component_Datepicker","modelValue","$setup","startDate","_cache","$event","onFocus","handleStartDateChange","_hoisted_3","_hoisted_4","endDate","handleEndDateChange","_hoisted_5","onClick","args","getData","isLoading","_hoisted_6","_component_q_spinner_tail","color","size","_createCommentVNode","_hoisted_7","_renderList","charts","chart","index","_hoisted_8","_toDisplayString","ref_for","ref","el","chartCanvasRefs","id","_hoisted_9"],"sources":["C:\\test\\test\\test\\src\\components\\Chart\\Chart.vue"],"sourcesContent":["<template>\r\n  \r\n     <div style=\"display: flex; justify-content: center; margin-top: 20px;\">\r\n      <div style=\"margin: 10px;\"><Datepicker \r\n          v-model=\"startDate\"\r\n          @focus=\"handleStartDateChange\"\r\n          />       \r\n      </div>\r\n      <span style=\"margin: 10px;\">~</span>\r\n      <div style=\"margin: 10px;\"><Datepicker      \r\n          v-model=\"endDate\"     \r\n          @focus=\"handleEndDateChange\"   \r\n          />\r\n      </div>\r\n     <div>\r\n\r\n      \r\n     \r\n    </div>\r\n       <button @click=\"getData\" class=\"btn btn-info btn-sm\">조회</button>\r\n    </div>\r\n\r\n  <div class=\"spinner-div\" v-if=\"isLoading\">\r\n      <q-spinner-tail\r\n      color=\"primary\"\r\n      size=\"5em\"\r\n      />\r\n  </div>\r\n\r\n \r\n\r\n  <br>\r\n  <!-- <div>   \r\n    <canvas ref=\"chartCanvas\" id=\"canvas\">    \r\n    </canvas>\r\n  </div> -->\r\n  <div v-for=\"(chart, index) in charts\" :key=\"index\" style=\"height: 400px; margin-bottom: 100px;\">\r\n    <label style=\"margin-top: 35px; margin-bottom: 10px;\">서버 이름 : {{   }}</label>\r\n    <canvas :ref=\"el => chartCanvasRefs[index] = el\" :id=\"'canvas' + index\"></canvas>\r\n  </div>\r\n\r\n\r\n  </template>\r\n  \r\n  <script>\r\n  import 'chartjs-adapter-date-fns';\r\n  import { ref, onMounted,nextTick  } from 'vue';\r\n  import axios from 'axios';\r\n  import { drawChart } from '../../common/common.js'; \r\n  import moment from 'moment';\r\n\r\n\r\n  \r\n  export default {\r\n  \r\n  name: 'TimeChart',\r\n  setup() {\r\n    const date = new Date();\r\n    const time = ref([]);\r\n    const ping = ref([]);\r\n    const chartCanvas = ref();\r\n    const startDate = ref(new Date(date.getFullYear(), date.getMonth(), 1));\r\n    const endDate = ref(new Date());\r\n    const selectedDate = ref();\r\n    const formatStartDate = ref();\r\n    const isLoading = ref(true);\r\n    const serverName = ref();\r\n    const chartCanvasRefs = ref([]);\r\n    const charts = ref([]);\r\n   \r\n   \r\n\r\n    const handleStartDateChange = (date) => {\r\n     const clickStartDate = date.target.value;\r\n\r\n     if(clickStartDate==null){\r\n        return;\r\n      }\r\n\r\n      let Year = clickStartDate.substring(0,4);\r\n      let Month = clickStartDate.substring(5,7);\r\n      let Day = clickStartDate.substring(8,10);\r\n   \r\n   \r\n      const newDate =  new Date(Number(Year), Number(Month)-1, Number(Day));     \r\n      startDate.value = newDate;\r\n    \r\n    };\r\n\r\n    const handleEndDateChange = (date) => {\r\n      const clickEndDate = date.target.value;\r\n\r\n      // if(clickEndDate==null){\r\n      //   return;\r\n      // }\r\n\r\n      let Year = clickEndDate.substring(0,4);\r\n      let Month = clickEndDate.substring(5,7);\r\n      let Day = clickEndDate.substring(8,10);\r\n\r\n      const newDate =  new Date(Number(Year), Number(Month)-1, Number(Day));\r\n      endDate.value = newDate;\r\n      \r\n    \r\n    };\r\n  \r\n    const getData = async () => {\r\n\r\n      const formattedStartDate = moment(startDate.value).format('YYYY-MM-DD');\r\n      const formattedEndDate = moment(endDate.value).format('YYYY-MM-DD');\r\n\r\n      if(formattedStartDate <= formattedEndDate) {\r\n        isLoading.value = true;\r\n          try {\r\n            const response = await axios.get(`/get/chartData`, {\r\n                  params: {\r\n                    startDate: formattedStartDate,\r\n                      endDate: formattedEndDate,\r\n                    }\r\n                  });\r\n\r\n                  \r\n                time.value = response.data.map(item => new Date(item.time).getTime());          \r\n                ping.value = response.data.map(item => item.ping);\r\n                serverName.value = response.data.map(item => item.serverName);\r\n\r\n\r\n\r\n                charts.value = Array.from({ length: 50 }, () => ({\r\n                    time: [...time.value],\r\n                    ping: [...ping.value],\r\n                    serverName : [...serverName.value]\r\n                  }));\r\n\r\n\r\n                  \r\n               \r\n               \r\n               await nextTick();\r\n\r\n              // charts.value.forEach((chart, index) => {\r\n              //         const canvas = chartCanvasRefs.value[index];\r\n              //     if (canvas) {\r\n              //       const context = canvas.getContext('2d');\r\n              //         drawChart(context, chart.time, chart.ping);\r\n              //     }\r\n              // });\r\n\r\n             \r\n\r\n              for (let index = 0; index < charts.value.length; index++) {\r\n                const chart = charts.value[index];\r\n                const canvas = chartCanvasRefs.value[index];\r\n                console.log(canvas);\r\n                if (canvas) {\r\n                  const context = canvas.getContext('2d');\r\n                 \r\n                await drawChartAsync(context, chart.time, chart.ping, true);\r\n              \r\n            }\r\n           \r\n          }\r\n\r\n          isLoading.value = false;\r\n\r\n                \r\n        } catch (error) {\r\n          console.error('Error fetching data:', error);\r\n        }\r\n      } else {\r\n          alert(\"시작날짜는 끝날짜보다 작아야 합니다.\")\r\n      }\r\n    };\r\n\r\n\r\n\r\n\r\n    const drawChartAsync = (context, time, ping ) => {\r\n      \r\n      return new Promise((resolve) => {\r\n        requestAnimationFrame(() => {\r\n          drawChart(context, time, ping);\r\n\r\n          resolve();\r\n         \r\n        });\r\n      });\r\n    };\r\n\r\n\r\n    onMounted(getData);\r\n\r\n   \r\n  \r\n    return { chartCanvas,\r\n              startDate,\r\n              endDate,\r\n              handleStartDateChange,\r\n              handleEndDateChange,\r\n              selectedDate,\r\n              formatStartDate, \r\n              getData, \r\n              isLoading,\r\n              chartCanvasRefs,\r\n              charts\r\n        };\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  #canvas {\r\n    width: 800px; \r\n    height: 400px;\r\n  }\r\n\r\n\r\n  .spinner-div {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(255, 255, 255, 0.8); \r\n  z-index: 9999; \r\n}\r\n\r\n\r\nbutton {\r\n  height: 35px; \r\n  margin-top: 5px; \r\n  width: 50px; \r\n  margin-left: 10px; \r\n  color: white;\r\n\r\n}\r\n  </style>\r\n  "],"mappings":";;;EAEUA,KAAiE,EAAjE;IAAA;IAAA;IAAA;EAAA;AAAiE;;EAChEA,KAAqB,EAArB;IAAA;EAAA;AAAqB;gEAK1BC,mBAAA,CAAoC;EAA9BD,KAAqB,EAArB;IAAA;EAAA;AAAqB,GAAC,GAAC;;EACxBA,KAAqB,EAArB;IAAA;EAAA;AAAqB;gEAK3BC,mBAAA,CAIK;;EAlBVC,GAAA;EAsBOC,KAAK,EAAC;;gEASXF,mBAAA,CAAI;;EAMKD,KAA8C,EAA9C;IAAA;IAAA;EAAA;AAA8C;mBArCzD;;;;uBAAAI,mBAAA,CAAAC,SAAA,SAEKJ,mBAAA,CAkBK,OAlBLK,UAkBK,GAjBJL,mBAAA,CAIM,OAJNM,UAIM,GAJqBC,YAAA,CAGrBC,qBAAA;IANZC,UAAA,EAImBC,MAAA,CAAAC,SAAS;IAJ5B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAImBH,MAAA,CAAAC,SAAS,GAAAE,MAAA;IACjBC,OAAK,EAAEJ,MAAA,CAAAK;wDAGZC,UAAoC,EACpChB,mBAAA,CAIM,OAJNiB,UAIM,GAJqBV,YAAA,CAGrBC,qBAAA;IAZZC,UAAA,EAUmBC,MAAA,CAAAQ,OAAO;IAV1B,uBAAAN,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAUmBH,MAAA,CAAAQ,OAAO,GAAAL,MAAA;IACfC,OAAK,EAAEJ,MAAA,CAAAS;wDAGbC,UAIK,EACHpB,mBAAA,CAAgE;IAAvDqB,OAAK,EAAAT,MAAA,QAAAA,MAAA,UAAAU,IAAA,KAAEZ,MAAA,CAAAa,OAAA,IAAAb,MAAA,CAAAa,OAAA,IAAAD,IAAA,CAAO;IAAEpB,KAAK,EAAC;KAAsB,IAAE,E,GAG7BQ,MAAA,CAAAc,SAAS,I,cAAxCrB,mBAAA,CAKM,OALNsB,UAKM,GAJFlB,YAAA,CAGEmB,yBAAA;IAFFC,KAAK,EAAC,SAAS;IACfC,IAAI,EAAC;UAzBXC,mBAAA,gBA+BEC,UAAI,EACJD,mBAAA,iGAGU,G,kBACV1B,mBAAA,CAGMC,SAAA,QAvCR2B,WAAA,CAoCgCrB,MAAA,CAAAsB,MAAM,EApCtC,CAoCeC,KAAK,EAAEC,KAAK;yBAAzB/B,mBAAA,CAGM;MAHiCF,GAAG,EAAEiC,KAAK;MAAEnC,KAA4C,EAA5C;QAAA;QAAA;MAAA;QACjDC,mBAAA,CAA6E,SAA7EmC,UAA6E,EAAvB,UAAQ,GAAAC,gBAAA,CAAK,CAAH,iBAChEpC,mBAAA,CAAiF;MAtCrFqC,OAAA;MAsCaC,GAAG,EAAEC,EAAE,IAAI7B,MAAA,CAAA8B,eAAe,CAACN,KAAK,IAAIK,EAAE;MAAGE,EAAE,aAAaP;4BAtCrEQ,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}