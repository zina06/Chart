{"ast":null,"code":"import 'chartjs-adapter-date-fns';\nimport { ref, onMounted, nextTick } from 'vue';\nimport axios from 'axios';\nimport { drawChart } from '../../common/common.js';\nimport moment from 'moment';\nexport default {\n  name: 'TimeChart',\n  setup() {\n    const date = new Date();\n    const time = ref([]);\n    const ping = ref([]);\n    const chartCanvas = ref();\n    const startDate = ref(new Date(date.getFullYear(), date.getMonth(), 1));\n    const endDate = ref(new Date());\n    const selectedDate = ref();\n    const formatStartDate = ref();\n    const isLoading = ref(true);\n    const serverName = ref();\n    const charts = ref([]);\n    const handleStartDateChange = date => {\n      const clickStartDate = date.target.value;\n      if (clickStartDate == null) {\n        return;\n      }\n      let Year = clickStartDate.substring(0, 4);\n      let Month = clickStartDate.substring(5, 7);\n      let Day = clickStartDate.substring(8, 10);\n      const newDate = new Date(Number(Year), Number(Month) - 1, Number(Day));\n      startDate.value = newDate;\n    };\n    const handleEndDateChange = date => {\n      const clickEndDate = date.target.value;\n\n      // if(clickEndDate==null){\n      //   return;\n      // }\n\n      let Year = clickEndDate.substring(0, 4);\n      let Month = clickEndDate.substring(5, 7);\n      let Day = clickEndDate.substring(8, 10);\n      const newDate = new Date(Number(Year), Number(Month) - 1, Number(Day));\n      endDate.value = newDate;\n    };\n    const getData = async () => {\n      const formattedStartDate = moment(startDate.value).format('YYYY-MM-DD');\n      const formattedEndDate = moment(endDate.value).format('YYYY-MM-DD');\n      if (formattedStartDate <= formattedEndDate) {\n        isLoading.value = true;\n        try {\n          const response = await axios.get(`/get/chartData`, {\n            params: {\n              startDate: formattedStartDate,\n              endDate: formattedEndDate\n            }\n          });\n          time.value = response.data.map(item => new Date(item.time).getTime());\n          ping.value = response.data.map(item => item.ping);\n          //       ping.value = response.data.ping;\n          console.log(\"ping : \" + ping.value);\n          serverName.value = response.data.map(item => item.serverName);\n          charts.value = Array.from({\n            length: 5\n          }, () => ({\n            time: [...time.value],\n            ping: [...ping.value]\n          }));\n\n          // drawChart(chartCanvas.value.getContext('2d'),time.value,ping.value);\n\n          await nextTick();\n          charts.value.forEach((chart, index) => {\n            drawChart(document.getElementById(`canvas${index}`).getContext('2d'), chart.time, chart.ping);\n          });\n          isLoading.value = false;\n        } catch (error) {\n          console.error('Error fetching data:', error);\n        }\n      } else {\n        alert(\"시작날짜는 끝날짜보다 작아야 합니다.\");\n      }\n    };\n    onMounted(getData);\n    return {\n      chartCanvas,\n      startDate,\n      endDate,\n      handleStartDateChange,\n      handleEndDateChange,\n      selectedDate,\n      formatStartDate,\n      getData,\n      isLoading\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","nextTick","axios","drawChart","moment","name","setup","date","Date","time","ping","chartCanvas","startDate","getFullYear","getMonth","endDate","selectedDate","formatStartDate","isLoading","serverName","charts","handleStartDateChange","clickStartDate","target","value","Year","substring","Month","Day","newDate","Number","handleEndDateChange","clickEndDate","getData","formattedStartDate","format","formattedEndDate","response","get","params","data","map","item","getTime","console","log","Array","from","length","forEach","chart","index","document","getElementById","getContext","error","alert"],"sources":["C:\\test\\test\\test\\src\\components\\Chart\\Chart.vue"],"sourcesContent":["<template>\r\n  \r\n     <div style=\"display: flex; justify-content: center; margin-top: 20px;\">\r\n      <div style=\"margin: 10px;\"><Datepicker \r\n          v-model=\"startDate\"\r\n          @focus=\"handleStartDateChange\"\r\n          />       \r\n      </div>\r\n      <span style=\"margin: 10px;\">~</span>\r\n      <div  style=\"margin: 10px;\"><Datepicker      \r\n          v-model=\"endDate\"     \r\n          @focus=\"handleEndDateChange\"   \r\n          />\r\n      </div>\r\n     <div>\r\n\r\n      \r\n     \r\n    </div>\r\n       <button @click=\"getData\" class=\"btn btn-info btn-sm\">조회</button>\r\n    </div>\r\n\r\n  <div class=\"spinner-div\" v-if=\"isLoading\">\r\n      <q-spinner-tail\r\n      color=\"primary\"\r\n      size=\"5em\"\r\n      />\r\n  </div>\r\n\r\n  <label style=\"margin-top: 30px; margin-bottom: 30px;\">서버 이름 :</label>\r\n\r\n  <br>\r\n  <div>   \r\n    <canvas ref=\"chartCanvas\" id=\"canvas\">    \r\n    </canvas>\r\n  </div>\r\n\r\n\r\n\r\n  </template>\r\n  \r\n  <script>\r\n  import 'chartjs-adapter-date-fns';\r\n  import { ref, onMounted, nextTick } from 'vue';\r\n  import axios from 'axios';\r\n  import { drawChart } from '../../common/common.js'; \r\n  import moment from 'moment';\r\n\r\n\r\n  \r\n  export default {\r\n  \r\n  name: 'TimeChart',\r\n  setup() {\r\n    const date = new Date();\r\n    const time = ref([]);\r\n    const ping = ref([]);\r\n    const chartCanvas = ref();\r\n    const startDate = ref(new Date(date.getFullYear(), date.getMonth(), 1));\r\n    const endDate = ref(new Date());\r\n    const selectedDate = ref();\r\n    const formatStartDate = ref();\r\n    const isLoading = ref(true);\r\n    const serverName = ref();\r\n    const charts = ref([]);\r\n   \r\n\r\n    const handleStartDateChange = (date) => {\r\n     const clickStartDate = date.target.value;\r\n\r\n     if(clickStartDate==null){\r\n        return;\r\n      }\r\n\r\n      let Year = clickStartDate.substring(0,4);\r\n      let Month = clickStartDate.substring(5,7);\r\n      let Day = clickStartDate.substring(8,10);\r\n   \r\n   \r\n      const newDate =  new Date(Number(Year), Number(Month)-1, Number(Day));     \r\n      startDate.value = newDate;\r\n    \r\n    };\r\n\r\n    const handleEndDateChange = (date) => {\r\n      const clickEndDate = date.target.value;\r\n\r\n      // if(clickEndDate==null){\r\n      //   return;\r\n      // }\r\n\r\n      let Year = clickEndDate.substring(0,4);\r\n      let Month = clickEndDate.substring(5,7);\r\n      let Day = clickEndDate.substring(8,10);\r\n\r\n      const newDate =  new Date(Number(Year), Number(Month)-1, Number(Day));\r\n      endDate.value = newDate;\r\n      \r\n    \r\n    };\r\n  \r\n    const getData = async () => {\r\n\r\n      const formattedStartDate = moment(startDate.value).format('YYYY-MM-DD');\r\n      const formattedEndDate = moment(endDate.value).format('YYYY-MM-DD');\r\n\r\n      if(formattedStartDate <= formattedEndDate) {\r\n        isLoading.value = true;\r\n          try {\r\n            const response = await axios.get(`/get/chartData`, {\r\n                  params: {\r\n                    startDate: formattedStartDate,\r\n                      endDate: formattedEndDate,\r\n                    }\r\n                  });\r\n\r\n                  \r\n                time.value = response.data.map(item => new Date(item.time).getTime());          \r\n                ping.value = response.data.map(item => item.ping);\r\n           //       ping.value = response.data.ping;\r\n                console.log(\"ping : \"+ping.value);\r\n                serverName.value = response.data.map(item => item.serverName);\r\n\r\n\r\n\r\n                charts.value = Array.from({ length: 5 }, () => ({\r\n                    time: [...time.value],\r\n                    ping: [...ping.value],\r\n                  }));\r\n              \r\n\r\n               // drawChart(chartCanvas.value.getContext('2d'),time.value,ping.value);\r\n               \r\n                await nextTick();\r\n\r\n              charts.value.forEach((chart, index) => {\r\n                drawChart(\r\n                  document.getElementById(`canvas${index}`).getContext('2d'),\r\n                  chart.time,\r\n                  chart.ping\r\n                );\r\n              });\r\n                isLoading.value = false;\r\n            } catch (error) {\r\n              console.error('Error fetching data:', error);\r\n            }\r\n      } else {\r\n          alert(\"시작날짜는 끝날짜보다 작아야 합니다.\")\r\n      }\r\n    };\r\n\r\n\r\n    onMounted(getData);\r\n\r\n   \r\n  \r\n    return { chartCanvas,\r\n              startDate,\r\n              endDate,\r\n              handleStartDateChange,\r\n              handleEndDateChange,\r\n              selectedDate,\r\n              formatStartDate, \r\n              getData, \r\n              isLoading\r\n        };\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  #canvas {\r\n    width: 800px; \r\n    height: 400px;\r\n  }\r\n\r\n\r\n  .spinner-div {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(255, 255, 255, 0.8); \r\n  z-index: 9999; \r\n}\r\n\r\n\r\nbutton {\r\n  height: 35px; \r\n  margin-top: 5px; \r\n  width: 50px; \r\n  margin-left: 10px; \r\n  color: white;\r\n\r\n}\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}