{"ast":null,"code":"import Chart from 'chart.js/auto';\nexport const drawChart = (ctx, time, ping) => {\n  if (Chart.getChart(ctx)) {\n    Chart.getChart(ctx)?.destroy();\n  }\n  console.log(\"drawChart\");\n  return new Promise(resolve => {\n    requestAnimationFrame(() => {\n      new Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: time,\n          datasets: [{\n            label: 'ping',\n            data: ping,\n            borderColor: 'rgb(75, 192, 192)',\n            backgroundColor: 'rgb(75, 192, 192)',\n            borderWidth: 3,\n            fill: false,\n            pointRadius: 0\n          }]\n        },\n        options: {\n          plugins: {\n            legend: {\n              position: 'bottom',\n              // 범례 위치\n              align: 'start' // 범례 수직 정렬\n            }\n          },\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            x: {\n              type: 'time',\n              time: {\n                unit: 'day',\n                displayFormats: {\n                  day: 'MM/dd'\n                }\n              }\n            },\n            y: {\n              min: 0,\n              max: 60000\n            }\n          }\n        }\n      });\n      resolve();\n    });\n  });\n};","map":{"version":3,"names":["Chart","drawChart","ctx","time","ping","getChart","destroy","console","log","Promise","resolve","requestAnimationFrame","type","data","labels","datasets","label","borderColor","backgroundColor","borderWidth","fill","pointRadius","options","plugins","legend","position","align","responsive","maintainAspectRatio","scales","x","unit","displayFormats","day","y","min","max"],"sources":["C:/test/test/test/src/common/common.js"],"sourcesContent":["import Chart from 'chart.js/auto';\r\n\r\n\r\nexport const drawChart = (ctx, time, ping) => {\r\n  if (Chart.getChart(ctx)) {\r\n    Chart.getChart(ctx)?.destroy();\r\n  }\r\n    \r\n   console.log(\"drawChart\");\r\n   return new Promise(resolve => {\r\n    requestAnimationFrame(() => { \r\n    new Chart(ctx, {\r\n      type: 'line',\r\n      data: {\r\n        labels: time,\r\n        datasets: [{\r\n          label: 'ping',\r\n          data: ping,\r\n          borderColor: 'rgb(75, 192, 192)',\r\n          backgroundColor: 'rgb(75, 192, 192)',\r\n          borderWidth: 3,\r\n          fill: false,\r\n          pointRadius : 0\r\n        }]\r\n      },\r\n      options: {    \r\n        plugins: {\r\n            legend: {\r\n                position: 'bottom', // 범례 위치\r\n                align: 'start' // 범례 수직 정렬\r\n            }\r\n        },\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        scales: {\r\n          x: {\r\n            type: 'time',\r\n            time: {\r\n              unit: 'day',\r\n              displayFormats: {\r\n                day: 'MM/dd'\r\n              }\r\n            }\r\n          },\r\n          y: {\r\n            min: 0,\r\n            max: 60000\r\n          }\r\n        }\r\n      }\r\n    });\r\n    resolve();\r\n    });\r\n  });\r\n  };\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,eAAe;AAGjC,OAAO,MAAMC,SAAS,GAAGA,CAACC,GAAG,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAC5C,IAAIJ,KAAK,CAACK,QAAQ,CAACH,GAAG,CAAC,EAAE;IACvBF,KAAK,CAACK,QAAQ,CAACH,GAAG,CAAC,EAAEI,OAAO,CAAC,CAAC;EAChC;EAECC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;EACxB,OAAO,IAAIC,OAAO,CAACC,OAAO,IAAI;IAC7BC,qBAAqB,CAAC,MAAM;MAC5B,IAAIX,KAAK,CAACE,GAAG,EAAE;QACbU,IAAI,EAAE,MAAM;QACZC,IAAI,EAAE;UACJC,MAAM,EAAEX,IAAI;UACZY,QAAQ,EAAE,CAAC;YACTC,KAAK,EAAE,MAAM;YACbH,IAAI,EAAET,IAAI;YACVa,WAAW,EAAE,mBAAmB;YAChCC,eAAe,EAAE,mBAAmB;YACpCC,WAAW,EAAE,CAAC;YACdC,IAAI,EAAE,KAAK;YACXC,WAAW,EAAG;UAChB,CAAC;QACH,CAAC;QACDC,OAAO,EAAE;UACPC,OAAO,EAAE;YACLC,MAAM,EAAE;cACJC,QAAQ,EAAE,QAAQ;cAAE;cACpBC,KAAK,EAAE,OAAO,CAAC;YACnB;UACJ,CAAC;UACDC,UAAU,EAAE,IAAI;UAChBC,mBAAmB,EAAE,KAAK;UAC1BC,MAAM,EAAE;YACNC,CAAC,EAAE;cACDlB,IAAI,EAAE,MAAM;cACZT,IAAI,EAAE;gBACJ4B,IAAI,EAAE,KAAK;gBACXC,cAAc,EAAE;kBACdC,GAAG,EAAE;gBACP;cACF;YACF,CAAC;YACDC,CAAC,EAAE;cACDC,GAAG,EAAE,CAAC;cACNC,GAAG,EAAE;YACP;UACF;QACF;MACF,CAAC,CAAC;MACF1B,OAAO,CAAC,CAAC;IACT,CAAC,CAAC;EACJ,CAAC,CAAC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}